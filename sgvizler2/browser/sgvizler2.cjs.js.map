{"version":3,"file":"sgvizler2.cjs.js","sources":["../../src/index.ts","../../src/leaflet.ts","../../src/leaflet/visualization.ts","../../src/leaflet/visualization/Map.ts","../../src/leaflet/API.ts","../../src/d3.ts","../../src/d3/visualization.ts","../../src/d3/visualization/ScatterChart.ts","../../src/d3/visualization/Pie.ts","../../src/d3/visualization/Line.ts","../../src/d3/visualization/ColumnChart.ts","../../src/d3/visualization/BubbleChart.ts","../../src/d3/visualization/BarChart.ts","../../src/d3/visualization/AreaChart.ts","../../src/google.ts","../../src/google/visualization.ts","../../src/google/visualization/Trendline.ts","../../src/google/visualization/TreeMap.ts","../../src/google/visualization/Timeline.ts","../../src/google/visualization/Table.ts","../../src/google/visualization/SteppedAreaChart.ts","../../src/google/visualization/ScatterChart.ts","../../src/google/visualization/Pie.ts","../../src/google/visualization/OrgChart.ts","../../src/google/visualization/Map.ts","../../src/google/visualization/LineChart.ts","../../src/google/visualization/IntervalChart.ts","../../src/google/visualization/Histogram.ts","../../src/google/visualization/GeoChart.ts","../../src/google/API.ts","../../src/google/visualization/ComboChart.ts","../../src/google/visualization/ColumnChart.ts","../../src/google/visualization/CandlestickChart.ts","../../src/google/visualization/Calendar.ts","../../src/google/visualization/BubbleChart.ts","../../src/google/visualization/BarChart.ts","../../src/google/visualization/AreaChart.ts","../../src/google/visualization/AnnotationChart.ts","../../src/google/Data.ts","../../src/google/Tools.ts","../../src/bordercloud.ts","../../src/bordercloud/visualization.ts","../../src/bordercloud/visualization/DataTable.ts","../../src/sgvizler.ts","../../src/sgvizler/Container.ts","../../src/sgvizler/Request.ts","../../src/sgvizler/SparqlTools.ts","../../src/sgvizler/Core.ts","../../src/sgvizler/Logger.ts","../../src/sgvizler/Tools.ts","../../src/sgvizler/Messages.ts","../../src/sgvizler/Select.ts","../../src/sgvizler/SparqlError.ts","../../src/sgvizler/Dependency.ts","../../src/sgvizler/Loader.ts","../../src/sgvizler/visualization.ts","../../src/sgvizler/visualization/Table.ts","../../src/sgvizler/Chart.ts","../../node_modules/tslib/tslib.es6.js"],"sourcesContent":["'use strict'\n\n/** @module example */\nimport * as jqueryProxy from 'jquery'\nconst jquery: JQueryStatic = (jqueryProxy as any).default || jqueryProxy\n\n// Namespace\nimport * as S from './sgvizler'\nexport const sgvizler = S\n\nimport * as bordercloudNS from './bordercloud'\nexport const bordercloud = bordercloudNS\n\nimport * as googleNS from './google'\nexport const google = googleNS\n\nimport * as d3NS from './d3'\nexport const d3 = d3NS\n\nimport * as leafletNS from './leaflet'\nexport const leaflet = leafletNS\n\n/**\n * Todo\n * @const\n *\n */\nexport const VERSION: string = S.Core.VERSION\n\n/**\n * Todo\n * @const\n */\nexport const HOMEPAGE: string = S.Core.HOMEPAGE\n\n/**\n * Draws the sgvizler-containers with the given element id.\n *\n */\nexport function containerLoadAll () {\n      S.Container.loadAllDependencies()\n}\n\nfunction readOptions (options: any) {\n    if (options) {\n        if (typeof options === 'object') {\n            google.API.key = options.googleApiKey ? options.googleApiKey : ''\n            leaflet.API.osmAccessToken = options.osmAccessToken ? options.osmAccessToken : ''\n            S.Core.path = options.path ? options.path : ''\n        }\n    }\n}\n\n/**\n * Draws the sgvizler-containers with the given element id.\n * @param {string} elementID\n */\nexport function containerDraw (elementID: string,options: any): void {\n   // S.Container.loadDependenciesId(elementID)\n    readOptions(options)\n    S.Container.drawWithElementId(elementID)\n}\n\n/**\n * Todo.\n */\nexport function containerDrawAll (options?: any) {\n   // S.Container.loadAllDependencies()\n    readOptions(options)\n    S.Container.drawAll()\n}\n\n/**\n * Todo.\n */\nexport function selectDraw (elementID: string) {\n    // S.Select.loadDependencies()\n    S.Select.drawWithElementId(elementID)\n}\n\n/**\n * Todo.\n */\nexport function selectDrawAll () {\n   // S.Select.loadDependencies()\n    S.Select.drawAll()\n}\n\n/**\n * Todo.\n * @param {string} className\n * @param {string} pathDoc\n * @returns {string}\n */\nexport function getChartDoc (className: string,pathDoc?: string) {\n    return S.Select.getChartDoc(className,pathDoc)\n}\n\n/**\n * Todo\n * @param {string} elementID\n * @param {string} endpoint\n * @param {string} query\n * @param {string} chartName\n * @param {string} options\n * @param {string} loglevel\n * @returns {string}\n */\nexport function create (\n    elementID: string,\n    endpoint: string,\n    query: string,\n    chartName: string,\n    options?: string,\n    loglevel?: string,\n    output?: string,\n    method?: string,\n    parameter?: string\n) {\n    return S.Container.create(\n        elementID,\n        endpoint,\n        query,\n        chartName,\n        options,\n        loglevel,\n        output,\n        method,\n        parameter\n    )\n}\n\n/**\n * Todo\n */\ninterface JQuery {\n\n    /**\n     * Todo selectchart\n     * @param param\n     * @param option\n     * @returns {JQuery}\n     */\n    selectchart (param?: any,option?: any): JQuery\n\n    /**\n     * todo containerchart\n     * @param param\n     * @param option\n     * @returns {JQuery}\n     */\n    containerchart (param?: any,option?: any): JQuery\n\n}\n\n// noinspection JSPotentiallyInvalidConstructorUsage\njqueryProxy.prototype.extend(\n    {\n        selectchart : function (param?: any,option?: any): JQuery {\n            let $this = this\n            let action = 'render'\n            if (param) {\n                if (typeof param === 'string') {\n                    action = param\n                } else if (typeof param === 'object') {\n                    action = param.action ? param.action : action\n                }\n            }\n            // Return the jQuery object for chaining.\n            return $this.each(function (index: any,obj: any) {\n                if (index >= 0 && action === 'render') {\n                    if (param && typeof param === 'object') {\n                        S.Select.draw(obj,param)\n                    } else {\n                        S.Select.draw(obj)\n                    }\n                }\n            })\n        },\n        containerchart : function (param?: any,option?: any): JQuery {\n            let $this = this\n            let action = 'render'\n            if (param) {\n                if (typeof param === 'string') {\n                    action = param\n                } else if (typeof param === 'object') {\n                    action = param.action ? param.action : action\n                }\n            }\n            // Return the jQuery object for chaining.\n            return $this.each(function (index: any,obj: any) {\n                if (index >= 0 && action === 'render') {\n                    if (param && typeof param === 'object') {\n                        S.Container.drawWithElementId($(obj).attr('id') as string,param)\n                    } else {\n                        S.Container.drawWithElementId($(obj).attr('id') as string)\n                    }\n                }\n            })\n        }\n    }\n)\n\nS.Loader.detectRoot()\n","/**\n * @namespace leaflet\n */\nimport * as visualizationNS from './leaflet/visualization'\nexport const visualization = visualizationNS\n\n// Class\nexport * from './leaflet/API'\n","/**\n * @namespace leaflet.visualization\n */\nexport * from './visualization/Map'\n","import {\n    Chart,\n    SparqlResultInterface,\n    Core\n} from '../../sgvizler'\n\nimport { API } from '../API'\n/**\n *\n */\ndeclare let $: any\n\n/**\n *\n */\ndeclare let L: any\n\n/**\n * Todo Table\n * @class leaflet.visualization.Map\n * @tutorial leaflet_visualization_Map\n * @memberof leaflet.visualization\n */\nexport class Map extends Chart {\n\n    public get icon (): string {\n        return 'fa-map'\n    }\n\n    public get label (): string {\n        return 'Map'\n    }\n\n    public get subtext (): string {\n        return 'Map'\n    }\n\n    public get classFullName (): string {\n        return 'leaflet.visualization.Map'\n    }\n\n    public get tutorialFilename (): string {\n        return 'tutorial-leaflet_visualization_Map.html'\n    }\n\n    public constructor () {\n        super()\n        this.addCss(Core.path + '/lib/leaflet/leaflet.css')\n        this.addCss(Core.path + '/lib/leaflet/MarkerCluster.Default.css')\n\n        let dep = this.addScript(Core.path + '/lib/leaflet/leaflet-src.js')\n        this.addScript(Core.path + '/lib/leaflet/leaflet.markercluster-src.js',dep)\n    }\n    /**\n     * Make a Google map\n     * todo\n     * @memberOf Map\n     * @returns {Promise<void>}\n     * @param result\n     */\n    public draw (result: SparqlResultInterface): Promise<any> {\n        let currentChart = this\n        return new Promise(function (resolve, reject) {\n            let messageError = ''\n            let cols = result.head.vars\n            let rows = result.results.bindings\n            let noCols = cols.length\n            let noRows = rows.length\n\n            let map\n            let height = '180px'\n            let idChart = currentChart.container.id + '-leaflet'\n            let element = document.getElementById(currentChart.container.id)\n            let markerArray: Array<any> = [] // create new markers array\n            let group\n            let markers\n            let marker\n            let lat\n            let long\n\n            if (currentChart.height !== '') {\n                height = currentChart.height\n            }\n\n            let opt = Object.assign({\n                width: currentChart.width,\n                height: height,\n                showTooltip: true,\n                showInfoWindow: true\n            }, currentChart.options)\n\n            if (element) {\n                element.innerHTML = \"<div id='\" + idChart + \"' style='width: \" + opt.width + '; height: ' + opt.height + \";'></div>\"\n\n                let osmLayer = new L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {\n                    attribution: 'Map data &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors, <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"http://mapbox.com\">Mapbox</a>',\n                    maxZoom: 18,\n                    id: 'mapbox.streets',\n                    accessToken: API.osmAccessToken\n                })\n\n                map = L.map(idChart,{zoom: 13,layers: [osmLayer]})\n\n                // todo insert option\n                markers = L.markerClusterGroup({\n                    chunkedLoading: true,\n                    spiderfyOnMaxZoom: true,\n                    showCoverageOnHover: true,\n                    zoomToBoundsOnClick: true\n                 })\n\n                if (noCols <= 2) {\n                    messageError = 'Parameters : latitude(xsd:Decimal) longitude(xsd:Decimal) title(xsd:string' +\n                        ' optional) introduction(xsd:string optional) link(IRI optional)'\n                } else {\n                    for (let row of rows) {\n                        lat = parseFloat(row[cols[0]].value)\n                        long = parseFloat(row[cols[1]].value)\n                        if (isNaN(lat) || isNaN(long)) {\n                            messageError = 'Latitude or longitude is not a decimal. Parameters of chart :' +\n                                ' latitude(xsd:Decimal)' +\n                                ' longitude(xsd:Decimal) title(xsd:string' +\n                                ' optional) introduction(xsd:string optional) link(IRI optional). '\n                            break\n                        }\n                        if (noCols >= 6) {\n                            // latitude longitude title text link\n                            let title = row[cols[2]] !== undefined ? row[cols[2]].value : ''\n                            let text = row[cols[3]] !== undefined ? \"<p style='margin: 0px'>\" + row[cols[3]].value + '</p>' : ''\n                            let link = row[cols[4]] !== undefined ? \"<a style='font-size: large;font-style: medium;' href='\" + row[cols[4]].value + \"' target='_blank'>\" + title + '</a>' : title\n                            let img = row[cols[5]] !== undefined ? \"<img src='\" + row[cols[5]].value + \"' style='margin-left:5px;margin-bottom:5px;width:150px;float:right;'/>\" : ''\n\n                            marker = L.marker([parseFloat(row[cols[0]].value), parseFloat(row[cols[1]].value)])\n\n                            if (row[cols[3]] === undefined || row[cols[3]].value.length === 0) {\n                                marker.bindPopup('<div style=\"display: flow-root;min-width: 150px;min-height:150px;\">' + link + '<div>' + img + '</div></div>')\n                            } else {\n                                marker.bindPopup('<div style=\"display: flow-root;width: 350px;min-height:150px;\">' + link + '<div>' + img + text + '</div></div>')\n                            }\n                        } else if (noCols === 5) {\n                            // latitude longitude title introduction link\n                            let title = row[cols[2]] !== undefined ? row[cols[2]].value : ''\n                            let text = row[cols[3]] !== undefined ? row[cols[3]].value : ''\n                            let link = row[cols[4]] !== undefined ? \"<a href='\" + row[cols[4]].value + \"'>\" + title + '</a>' : title\n\n                            marker = L.marker([parseFloat(row[cols[0]].value), parseFloat(row[cols[1]].value)])\n                            marker.bindPopup('<b>' + link + '</b><br/>' + text )\n                        } else if (noCols === 4) {\n                            // latitude longitude title introduction\n                            let title = row[cols[2]] !== undefined ? row[cols[2]].value : ''\n                            let text = row[cols[3]] !== undefined ? row[cols[3]].value : ''\n\n                            marker = L.marker([parseFloat(row[cols[0]].value), parseFloat(row[cols[1]].value)])\n                            marker.bindPopup('<b>' + title + '</b><br/>' + text )\n                        } else if (noCols === 3) {\n                            // latitude longitude title\n                            let title = row[cols[2]] !== undefined ? row[cols[2]].value : ''\n\n                            marker = L.marker([parseFloat(row[cols[0]].value), parseFloat(row[cols[1]].value)])\n                            marker.bindPopup('<b>' + title + '</br>')\n                        } else if (noCols === 2) {\n                            // latitude longitude\n                            marker = L.marker([parseFloat(row[cols[0]].value), parseFloat(row[cols[1]].value)])\n                            marker.addTo(map)\n                        }\n                        markers.addLayer(marker)\n                        markerArray.push(marker)\n                    }\n                }\n\n                if (messageError !== '') {\n                    return reject(Error(messageError))\n                }\n\n                map.addLayer(markers)\n\n                // zoom on the markers\n                group = L.featureGroup(markerArray)\n                map.fitBounds(group.getBounds())\n                // finish\n                return resolve()\n            }\n        })\n    }\n}\n","/**\n * Todo API\n * @class leaflet.API\n * @memberof google\n */\nexport class API {\n    static get osmAccessToken (): string {\n        return this._osmAccessToken\n    }\n\n    static set osmAccessToken (value: string) {\n        this._osmAccessToken = value\n    }\n\n    /**\n     * todo\n     * @type {string}\n     * @private\n     */\n    private static _osmAccessToken: string = ''\n}\n","/**\n * @namespace d3\n */\nimport * as visualizationNS from './d3/visualization'\nexport const visualization = visualizationNS\n","/**\n * @namespace bordercloud.visualization\n */\n\nexport * from './visualization/AreaChart'\nexport * from './visualization/BarChart'\nexport * from './visualization/BubbleChart'\nexport * from './visualization/ColumnChart'\nexport * from './visualization/Line'\nexport * from './visualization/Pie'\nexport * from './visualization/ScatterChart'\n","import {\n    Chart,\n    SparqlResultInterface,\n    Logger,\n    Core\n} from '../../sgvizler'\n\ndeclare let d3: any\n\n/**\n * Todo ScatterChart\n * @class d3.visualization.ScatterChart\n * @tutorial d3_visualization_ScatterChart\n * @memberof d3.visualization\n */\nexport class ScatterChart extends Chart {\n\n    public get icon (): string {\n        return 'fa-ScatterChart-chart'\n    }\n\n    public get label (): string {\n        return 'ScatterChart'\n    }\n\n    public get subtext (): string {\n        return 'ScatterChart'\n    }\n\n    public get classFullName (): string {\n        return 'd3.visualization.ScatterChart'\n    }\n\n    public get tutorialFilename (): string {\n        return 'tutorial-d3_visualization_ScatterChart.html'\n    }\n\n    public constructor () {\n        super()\n        this.addCss(Core.path + '/lib/d3/d3.css')\n        let dep = this.addScript(Core.path + '/lib/d3/d3.js')\n    }\n\n    /**\n     * Make a simple ScatterChart.\n     * Available options:\n     * -\n     * @memberOf ScatterChart\n     * @returns {Promise<void>}\n     * @param result\n     */\n    public draw (result: SparqlResultInterface): Promise<any> {\n        let currentChart = this\n        return new Promise(function (resolve, reject) {\n            // transform query\n            // console.log(noCols + \" x \" + noRows)\n\n            let heightOpt = '500'\n            if (currentChart.height !== '') {\n                heightOpt = currentChart.height\n            }\n\n            let opt = Object.assign({\n                showRowNumber: false,\n                width: currentChart.width,\n                height: heightOpt\n            }, currentChart.options)\n\n            // build the datatable\n            let cols = result.head.lets\n            let rows = result.results.bindings\n            let noCols = cols.length\n            let noRows = rows.length\n            let dataset: Array<any> = []\n            let label\n            let counter\n            for (let row of rows) {\n                label = row[cols[0]].value\n                counter = Number(row[cols[1]].value)\n                if ( label === undefined || counter === undefined) {\n                    Logger.logSimple('Erreur ? D3JS:ScatterChart label ' + label + ' count ' + counter)\n                } else {\n                    dataset.push({ label: label , count: counter })\n                }\n            }\n\n            console.log(dataset)\n            // let containerElement = d3.select('#' + currentChart.container.id)\n          //  let containerElementNode = containerElement.node() as any\n            /*if (containerElementNode) {\n                let width = containerElementNode.clientWidth !== 0 ? containerElementNode.clientWidth : 300\n                let height = containerElementNode.clientHeight !== 0 ? containerElementNode.clientHeight : 150\n                let svg = containerElement.append('svg') // associate our data with the document\n                    .attr('width', width)\n                    .attr('height', height)\n                    .attr('id', 'idtest')\n\n                let radius = Math.min(width, height) / 2\n\n                svg = svg.append('g') // make a group to hold our ScatterChart chart\n                    .attr('transform', 'translate(' + (width / 2) + ',' + (height / 2) + ')')\n\n                // let donutWidth = 75;\n                let legendRectSize = 18\n                let legendSpacing = 4\n                let color = d3.scaleOrdinal(d3.schemeCategory10)\n\n                let arc = d3.arc()\n                   // .innerRadius(radius - donutWidth)\n                    .innerRadius(0)\n                    .outerRadius(radius)\n                let ScatterChart = d3.ScatterChart()\n                    .value(function (d: any) { return d.count })\n                    .sort(null)\n                let path = svg.selectAll('path')\n                    .data(ScatterChart(dataset))\n                    .enter()\n                    .append('path')\n                    .attr('d', arc)\n                    .attr('fill', function (d: any, i: any) {\n                        return color(d.data.label)\n                    })\n\n                // Todo limit nb (look ScatterChart chart of Google)\n                let legend = svg.selectAll('.legend')\n                    .data(color.domain())\n                    .enter()\n                    .append('g')\n                    .attr('class', 'legend')\n                    .attr('transform', function (d: any, i: any) {\n                        let height = legendRectSize + legendSpacing\n                        let offset = height * color.domain().length / 2\n                        let horz = -2 * legendRectSize\n                        let vert = i * height - offset\n                        return 'translate(' + (horz + radius * 2 + 20 ) + ',' + vert + ')'\n                    })\n                legend.append('rect')\n                    .attr('width', legendRectSize)\n                    .attr('height', legendRectSize)\n                    .style('fill', color)\n                    .style('stroke', color)\n                legend.append('text')\n                    .attr('x', legendRectSize + legendSpacing)\n                    .attr('y', legendRectSize - legendSpacing)\n                    .text(function (d: any) { return d })*/\n/*\n                    let width = 500\n                    let height = 300\n                    let padding = 30\n                    let numDataPoints = 50\n                    let xRange = Math.random() * 1000\n                    let yRange = Math.random() * 1000\n                for (let i = 0; i < numDataPoints; i++) {\n                  let newNumber1 = Math.floor(Math.random() * xRange)\n                  let newNumber2 = Math.floor(Math.random() * yRange)\n                   dataset.push([newNumber1, newNumber2])\n                }\n                // Create scale functions\n                let xScale = d3.scale.linear()\n                               .domain([0, d3.max(dataset, function (d: any) {\n                                 return d[0]\n                               }) ])\n                               .range([padding, width - padding * 2])\n                let yScale = d3.scale.linear()\n                               .domain([0, d3.max(dataset, function (d: any) {\n                                 return d[1]\n                               })])\n                               .range([height - padding, padding])\n                let rScale = d3.scale.linear()\n                               .domain([0, d3.max(dataset, function (d: any) {\n                                 return d[1]\n                               })])\n                                            .range([2, 5])\n                let formatAsPercentage = d3.tickFormat('.1%')\n               // Define X axis\n                let xAxis = d3.svg.axis()\n                              .scale(xScale)\n                              .orient('bottom')\n                              .ticks(5)\n                              .tickFormat(formatAsPercentage)\n                // Define Y axis\n                let yAxis = d3.svg.axis()\n                              .scale(yScale)\n                                .orient('left')\n                                .ticks(5)\n                                .tickFormat(formatAsPercentage)\n                // Create SVG element\n                let svg = d3.select('#' + currentChart.container.id)\n                                        .append('svg')\n                                        .attr('width', width)\n                                        .attr('height', height)\n                                        .append('g')\n                // Create circles\n                svg.selectAll('circle')\n                     .data(dataset)\n                   .enter()\n                     .append('circle')\n                     .attr('cx', function (d: any) {\n                       return xScale(d[0])\n                     })\n                     .attr('cy', function (d: any) {\n                       return yScale(d[1])\n                     })\n                     .attr('r', function (d: any) {\n                       return rScale(d[1])\n                     })\n                // Create labels\n                svg.selectAll('text')\n                   .data(dataset)\n                   .enter()\n                   .append('text')\n                   .text(function (d: any) {\n                           return d[0] + ',' + d[1]\n                   })\n                   .attr('x', function (d: any) {\n                           return xScale(d[0])\n                   })\n                   .attr('y', function (d: any) {\n                           return yScale(d[1])\n                   })\n                   .attr('font-family', 'sans-serif')\n                   .attr('font-size', '11px')\n                   .attr('fill', 'red')\n                // Create X axis\n                svg.append('g')\n                   .attr('class', 'axis')\n                   .attr('transform', 'translate(0,' + (height - padding) + ')')\n                   .call(xAxis)\n                // Create Y axis\n                svg.append('g')\n                   .attr('class', 'axis')\n                   .attr('transform', 'translate(' + padding + ',0)')\n                   .call(yAxis)\n                   */\n            // finish\n            return resolve()\n        })\n    }\n\n}\n","import {\n    Chart,\n    SparqlResultInterface,\n    Logger,\n    Core\n} from '../../sgvizler'\n\ndeclare let d3: any\n\n/**\n * Todo Pie\n * @class d3.visualization.Pie\n * @tutorial d3_visualization_Pie\n * @memberof d3.visualization\n */\nexport class Pie extends Chart {\n\n    public get icon (): string {\n        return 'fa-pie-chart'\n    }\n\n    public get label (): string {\n        return 'Pie'\n    }\n\n    public get subtext (): string {\n        return 'Pie'\n    }\n\n    public get classFullName (): string {\n        return 'd3.visualization.Pie'\n    }\n\n    public get tutorialFilename (): string {\n        return 'tutorial-d3_visualization_Pie.html'\n    }\n\n    public constructor () {\n        super()\n        this.addCss(Core.path + '/lib/d3/d3.css')\n        let dep = this.addScript(Core.path + '/lib/d3/d3.js')\n    }\n\n    /**\n     * Make a simple pie.\n     * Available options:\n     * -\n     * @memberOf Pie\n     * @returns {Promise<void>}\n     * @param result\n     */\n    public draw (result: SparqlResultInterface): Promise<any> {\n        let currentChart = this\n        return new Promise(function (resolve, reject) {\n\n\n            // transform query\n            // console.log(noCols + \" x \" + noRows)\n\n            let heightOpt = '100%'\n            if (currentChart.height !== '') {\n                heightOpt = currentChart.height\n            }\n\n            let opt = Object.assign({\n                showRowNumber: false,\n                width: currentChart.width,\n                height: heightOpt\n            }, currentChart.options)\n\n            // build the datatable\n            let cols = result.head.vars\n            let rows = result.results.bindings\n            let noCols = cols.length\n            let noRows = rows.length\n            let dataset: Array<any> = []\n            let label\n            let counter\n            for (let row of rows) {\n                label = row[cols[0]].value\n                counter = Number(row[cols[1]].value)\n                if ( label === undefined || counter === undefined) {\n                    Logger.logSimple('Erreur ? D3JS:pie label ' + label + ' count ' + counter)\n                }else {\n                    dataset.push({ label: label , count: counter })\n                }\n            }\n\n            // console.log(data)\n            let containerElement = d3.select('#' + currentChart.container.id)\n            let containerElementNode = containerElement.node() as any\n            if (containerElementNode) {\n                let width = containerElementNode.clientWidth !== 0 ? containerElementNode.clientWidth : 300\n                let height = containerElementNode.clientHeight !== 0 ? containerElementNode.clientHeight : 150\n                let svg = containerElement.append('svg') // associate our data with the document\n                    .attr('width', width)\n                    .attr('height', height)\n                    .attr('id', 'idtest')\n\n                let radius = Math.min(width, height) / 2\n\n                svg = svg.append('g') // make a group to hold our pie chart\n                    .attr('transform', 'translate(' + (width / 2) + ',' + (height / 2) + ')')\n\n                // var donutWidth = 75;\n                let legendRectSize = 18\n                let legendSpacing = 4\n                let color = d3.scaleOrdinal(d3.schemeCategory10)\n\n                let arc = d3.arc()\n                   // .innerRadius(radius - donutWidth)\n                    .innerRadius(0)\n                    .outerRadius(radius)\n                let pie = d3.pie()\n                    .value(function (d: any) { return d.count })\n                    .sort(null)\n                let path = svg.selectAll('path')\n                    .data(pie(dataset))\n                    .enter()\n                    .append('path')\n                    .attr('d', arc)\n                    .attr('fill', function (d: any, i: any) {\n                        return color(d.data.label)\n                    })\n\n                // Todo limit nb (look pie chart of Google)\n                let legend = svg.selectAll('.legend')\n                    .data(color.domain())\n                    .enter()\n                    .append('g')\n                    .attr('class', 'legend')\n                    .attr('transform', function (d: any, i: any) {\n                        let height = legendRectSize + legendSpacing\n                        let offset = height * color.domain().length / 2\n                        let horz = -2 * legendRectSize\n                        let vert = i * height - offset\n                        return 'translate(' + (horz + radius * 2 + 20 ) + ',' + vert + ')'\n                    })\n                legend.append('rect')\n                    .attr('width', legendRectSize)\n                    .attr('height', legendRectSize)\n                    .style('fill', color)\n                    .style('stroke', color)\n                legend.append('text')\n                    .attr('x', legendRectSize + legendSpacing)\n                    .attr('y', legendRectSize - legendSpacing)\n                    .text(function (d: any) { return d })\n            }\n            // finish\n            return resolve()\n        })\n    }\n\n}\n","import {\n    Chart,\n    SparqlResultInterface,\n    Logger,\n    Core\n} from '../../sgvizler'\n\ndeclare let d3: any\n\n/**\n * Todo Line\n * @class d3.visualization.Line\n * @tutorial d3_visualization_Line\n * @memberof d3.visualization\n */\nexport class Line extends Chart {\n\n    public get icon (): string {\n        return 'fa-line-chart'\n    }\n\n    public get label (): string {\n        return 'Line'\n    }\n\n    public get subtext (): string {\n        return 'Line'\n    }\n\n    public get classFullName (): string {\n        return 'd3.visualization.Line'\n    }\n\n    public get tutorialFilename (): string {\n        return 'tutorial-d3_visualization_Line.html'\n    }\n\n    public constructor () {\n        super()\n        this.addCss(Core.path + '/lib/d3/d3.css')\n        let dep = this.addScript(Core.path + '/lib/d3/d3.js')\n    }\n\n    /**\n     * Make a simple line.\n     * Available options:\n     * -\n     * @memberOf Line\n     * @returns {Promise<void>}\n     * @param result\n     */\n    public draw (result: SparqlResultInterface): Promise<any> {\n        let currentChart = this\n        return new Promise(function (resolve, reject) {\n            // transform query\n            // console.log(noCols + \" x \" + noRows)\n            //console.log('test')\n            let heightOpt = '100%'\n            if (currentChart.height !== '') {\n                heightOpt = currentChart.height\n            }\n\n            let opt = Object.assign({\n                showRowNumber: true,\n                width: currentChart.width,\n                height: heightOpt\n               // hAxisscaleType: true\n            }, currentChart.options)\n\n            // build the datatable\n            let cols = result.head.vars\n            let rows = result.results.bindings\n            let noCols = cols.length\n            let noRows = rows.length\n            let dataset: Array<any> = []\n            let label\n            let count\n            for (let row of rows) {\n                label = row[cols[0]].value\n                count = Number(row[cols[1]].value)\n                if ( label === undefined || count === undefined) {\n                    Logger.logSimple('Erreur ? D3JS:pie label ' + label + ' count ' + count)\n                } else {\n                    dataset.push({ label: label , count: count })\n                }\n            }\n\n            console.log(dataset)\n            let margin = {\n                top: 30,\n                right: 20 * 3,\n                bottom: 30,\n                left: 70\n            }\n            let width = 800 - margin.left - margin.right\n            let height = 570 - margin.top - margin.bottom\n            // x axis\n            let x = d3.scalePoint()\n            .domain(dataset.map(function (entry) {\n                return entry.label\n            }))\n            .rangeRound([0, 800])\n            .padding(0.5)\n            let xAxis = d3.axisBottom().scale(x).ticks(15)\n            // y axis\n            let y = d3.scaleLinear().range([height, 0])\n            y.domain([0, d3.max(dataset, function (d: any) {\n            return d.count\n            })])\n            let yAxis = d3.axisLeft().scale(y).ticks(17)\n\n            let valueline = d3.line()\n                .x(function (d: any) {\n                  return x(d.label)\n                })\n                .y(function (d: any) {\n                  return y(d.count)\n                })\n            let svg = d3.select( '#' + currentChart.container.id)\n                .append('svg')\n                .attr('width', width + margin.left + margin.right)\n                .attr('height', height + margin.top + margin.bottom)\n                .append('g')\n                .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n\n            svg.append('path') // Add the valueline path.\n            .attr('fill', 'none')\n            .attr('stroke', 'steelblue')\n            .attr('stroke-linejoin', 'round')\n            .attr('stroke-linecap', 'round')\n            .attr('stroke-width', 1.5)\n            .attr('d', valueline(dataset))\n            svg.append('g') // Add the X Axis\n            .attr('class', 'x axis')\n                .attr('transform', 'translate(0,' + height + ')')\n                .call(xAxis)\n            svg.append('g') // Add the Y Axis\n                .attr('class', 'y axis')\n                .call(yAxis)\n            // finish\n            return resolve()\n        })\n    }\n\n}\n","import {\n    Chart,\n    SparqlResultInterface,\n    Logger,\n    Core\n} from '../../sgvizler'\n\ndeclare let d3: any\n\n/**\n * Todo ColumnChart\n * @class d3.visualization.ColumnChart\n * @tutorial d3_visualization_ColumnChart\n * @memberof d3.visualization\n */\nexport class ColumnChart extends Chart {\n\n    public get icon (): string {\n        return 'fa-bar-chart'\n    }\n\n    public get label (): string {\n        return 'ColumnChart'\n    }\n\n    public get subtext (): string {\n        return 'ColumnChart'\n    }\n\n    public get classFullName (): string {\n        return 'd3.visualization.ColumnChart'\n    }\n\n    public get tutorialFilename (): string {\n        return 'tutorial-d3_visualization_ColumnChart.html'\n    }\n\n    public constructor () {\n        super()\n        this.addCss(Core.path + '/lib/d3/d3.css')\n        let dep = this.addScript(Core.path + '/lib/d3/d3.js')\n    }\n\n    /**\n     * Make a simple ColumnChart.\n     * Available options:\n     * -\n     * @memberOf ColumnChart\n     * @returns {Promise<void>}\n     * @param result\n     */\n    public draw (result: SparqlResultInterface): Promise<any> {\n        let currentChart = this\n        return new Promise(function (resolve, reject) {\n            // transform query\n            // console.log(noCols + \" x \" + noRows)\n\n            let heightOpt = '100%'\n            if (currentChart.height !== '') {\n                heightOpt = currentChart.height\n            }\n\n            let opt = Object.assign({\n                showRowNumber: false,\n                width: currentChart.width,\n                height: heightOpt\n            }, currentChart.options)\n/*\n            // build the datatable\n            let cols = result.head.vars\n            let rows = result.results.bindings\n            let noCols = cols.length\n            let noRows = rows.length\n            let dataset: Array<any> = []\n            let label\n            let counter\n            for (let row of rows) {\n                label = row[cols[0]].value\n                counter = Number(row[cols[1]].value)\n                if ( label === undefined || counter === undefined) {\n                    Logger.logSimple('Erreur ? D3JS:ColumnChart label ' + label + ' count ' + counter)\n                }else {\n                    dataset.push({ label: label , count: counter })\n                }\n            }\n\n            // console.log(data)\n            let containerElement = d3.select('#' + currentChart.container.id)\n            let containerElementNode = containerElement.node() as any\n            if (containerElementNode) {\n                let width = containerElementNode.clientWidth !== 0 ? containerElementNode.clientWidth : 300\n                let height = containerElementNode.clientHeight !== 0 ? containerElementNode.clientHeight : 150\n                let svg = containerElement.append('svg') // associate our data with the document\n                    .attr('width', width)\n                    .attr('height', height)\n                    .attr('id', 'idtest')\n\n                let radius = Math.min(width, height) / 2\n\n                svg = svg.append('g') // make a group to hold our ColumnChart chart\n                    .attr('transform', 'translate(' + (width / 2) + ',' + (height / 2) + ')')\n\n                // var donutWidth = 75;\n                let legendRectSize = 18\n                let legendSpacing = 4\n                let color = d3.scaleOrdinal(d3.schemeCategory10)\n\n                let arc = d3.arc()\n                   // .innerRadius(radius - donutWidth)\n                    .innerRadius(0)\n                    .outerRadius(radius)\n                let ColumnChart = d3.ColumnChart()\n                    .value(function (d: any) { return d.count })\n                    .sort(null)\n                let path = svg.selectAll('path')\n                    .data(ColumnChart(dataset))\n                    .enter()\n                    .append('path')\n                    .attr('d', arc)\n                    .attr('fill', function (d: any, i: any) {\n                        return color(d.data.label)\n                    })\n\n                // Todo limit nb (look ColumnChart chart of Google)\n                let legend = svg.selectAll('.legend')\n                    .data(color.domain())\n                    .enter()\n                    .append('g')\n                    .attr('class', 'legend')\n                    .attr('transform', function (d: any, i: any) {\n                        let height = legendRectSize + legendSpacing\n                        let offset = height * color.domain().length / 2\n                        let horz = -2 * legendRectSize\n                        let vert = i * height - offset\n                        return 'translate(' + (horz + radius * 2 + 20 ) + ',' + vert + ')'\n                    })\n                legend.append('rect')\n                    .attr('width', legendRectSize)\n                    .attr('height', legendRectSize)\n                    .style('fill', color)\n                    .style('stroke', color)\n                legend.append('text')\n                    .attr('x', legendRectSize + legendSpacing)\n                    .attr('y', legendRectSize - legendSpacing)\n                    .text(function (d: any) { return d })\n            }\n            */\n            // finish\n            return resolve()\n        })\n    }\n\n}\n","import {\n    Chart,\n    SparqlResultInterface,\n    Logger,\n    Core\n} from '../../sgvizler'\n\ndeclare let d3: any\n\n/**\n * Todo BubbleChart\n * @class d3.visualization.BubbleChart\n * @tutorial d3_visualization_BubbleChart\n * @memberof d3.visualization\n */\nexport class BubbleChart extends Chart {\n\n        public get icon (): string {\n            return 'fa-pie-chart'\n        }\n\n        public get label (): string {\n            return 'BubbleChart'\n        }\n\n        public get subtext (): string {\n            return 'BubbleChart'\n        }\n\n        public get classFullName (): string {\n            return 'd3.visualization.BubbleChart'\n        }\n\n        public get tutorialFilename (): string {\n            return 'tutorial-d3_visualization_BubbleChart.html'\n        }\n\n        public constructor () {\n            super()\n            this.addCss(Core.path + '/lib/d3/d3.css')\n            let dep = this.addScript(Core.path + '/lib/d3/d3.js')\n        }\n\n        /**\n         * Make a simple pie.\n         * Available options:\n         * -\n         * @memberOf Pie\n         * @returns {Promise<void>}\n         * @param result\n         */\n        public draw (result: SparqlResultInterface): Promise<any> {\n            let currentChart = this\n            return new Promise(function (resolve, reject) {\n                let heightOpt = '100%'\n                if (currentChart.height !== '') {\n                    heightOpt = currentChart.height\n                }\n\n                let opt = Object.assign({\n                    showRowNumber: false,\n                    width: currentChart.width,\n                    height: heightOpt\n                }, currentChart.options)\n\n                // build the datatable\n                let cols = result.head.vars\n                let rows = result.results.bindings\n                let noCols = cols.length\n                let noRows = rows.length\n                /*let dataset: Array<any> = []\n                let label\n                let counter\n                for (let row of rows) {\n                    label = row[cols[0]].value\n                    counter = Number(row[cols[1]].value)\n                    if ( label === undefined || counter === undefined) {\n                        Logger.logSimple('Erreur ? D3JS:pie label ' + label + ' count ' + counter)\n                    } else {\n                        dataset.push({ label: label , count: counter })\n                    }\n                }*/\n\n                // console.log(data)\n\n                // Example\n                let containerElement = d3.select('#' + currentChart.container.id)\n                let containerElementNode = containerElement.node() as any\n                if (containerElementNode) {\n                    let width = containerElementNode.clientWidth !== 0 ? containerElementNode.clientWidth : 300\n                    let height = containerElementNode.clientHeight !== 0 ? containerElementNode.clientHeight : 150\n                    let svg = containerElement.append('svg') // associate our data with the document\n                        .attr('width', width)\n                        .attr('height', height)\n                        .attr('id', 'idtest')\n\n                    let margin = { top: 20, right: 20, bottom: 30, left: 40 }\n                    let widthChart = width - (margin.left + margin.right)\n                    let heightChart = height - (margin.top + margin.bottom)\n\n                    let xScale = d3.scaleLinear()\n                    let yScale = d3.scaleLinear()\n\n                    let xAxisCall = d3.axisBottom()\n                    let yAxisCall = d3.axisLeft()\n\n                    xScale.domain([0, 100]).range([0, widthChart])\n                    yScale.domain([0, 100]).range([heightChart, 0])\n\n                    xAxisCall.scale(xScale)\n                    yAxisCall.scale(yScale)\n\n                    let newX = svg.append('g')\n                        // .attr('class', 'x axis')\n                        .attr('transform', 'translate(' + [margin.left, heightChart + margin.top] + ')')\n                        .call(xAxisCall)\n                    let newY = svg.append('g')\n                        // .attr('class', 'y axis')\n                        .attr('transform', 'translate(' + [margin.left, margin.top] + ')')\n                        .call(yAxisCall)\n\n                }\n                // finish\n                return resolve()\n            })\n        }\n\n    }\n","/** Work in progress, help us ! */\n\nimport {\n    Chart,\n    SparqlResultInterface,\n    Logger,\n    Core\n} from '../../sgvizler'\n\ndeclare let d3: any\n\n/**\n * Todo BarChart\n * @class d3.visualization.BarChart\n * @tutorial d3_visualization_BarChart\n * @memberof d3.visualization\n */\nexport class BarChart extends Chart {\n\n    public get icon (): string {\n        return 'fa-bar-chart'\n    }\n\n    public get label (): string {\n        return 'BarChart'\n    }\n\n    public get subtext (): string {\n        return 'BarChart'\n    }\n\n    public get classFullName (): string {\n        return 'd3.visualization.BarChart'\n    }\n\n    public get tutorialFilename (): string {\n        return 'tutorial-d3_visualization_BarChart.html'\n    }\n\n    public constructor () {\n        super()\n        this.addCss(Core.path + '/lib/d3/d3.css')\n        let dep = this.addScript(Core.path + '/lib/d3/d3.js')\n    }\n\n    /**\n     * Make a simple pie.\n     * Available options:\n     * -\n     * @memberOf BarChart\n     * @returns {Promise<void>}\n     * @param result\n     */\n    public draw (result: SparqlResultInterface): Promise<any> {\n        let currentChart = this\n        return new Promise(function (resolve, reject) {\n            // transform query\n            // console.log(noCols + \" x \" + noRows)\n\n            let heightOpt = '100%'\n            if (currentChart.height !== '') {\n                heightOpt = currentChart.height\n            }\n\n            let opt = Object.assign({\n                showRowNumber: false,\n                width: currentChart.width,\n                height: heightOpt\n            }, currentChart.options)\n\n            // build the datatable\n            let cols = result.head.vars\n            let rows = result.results.bindings\n            let noCols = cols.length\n            let noRows = rows.length\n            let dataset: Array<any> = []\n            let label\n            let counter\n            for (let row of rows) {\n                label = row[cols[0]].value\n                counter = Number(row[cols[1]].value)\n                if ( label === undefined || counter === undefined) {\n                    Logger.logSimple('Erreur ? D3JS:pie label ' + label + ' count ' + counter)\n                }else {\n                    dataset.push({ label: label , count: counter })\n                }\n            }\n\n            // console.log(data)\n            let containerElement = d3.select('#' + currentChart.container.id)\n            let containerElementNode = containerElement.node() as any\n            if (containerElementNode) {\n                let width = containerElementNode.clientWidth !== 0 ? containerElementNode.clientWidth : 300\n                let height = containerElementNode.clientHeight !== 0 ? containerElementNode.clientHeight : 150\n                let svg = containerElement.append('svg') // associate our data with the document\n                    .attr('width', width)\n                    .attr('height', height)\n                    .attr('id', 'idtest')\n\n                let radius = Math.min(width, height) / 2\n\n                svg = svg.append('g') // make a group to hold our pie chart\n                    .attr('transform', 'translate(' + (width / 2) + ',' + (height / 2) + ')')\n\n                // var donutWidth = 75;\n                /*let legendRectSize = 18\n                let legendSpacing = 4\n                let color = d3.scaleOrdinal(d3.schemeCategory10)*/\n\n                /*let arc = d3.arc()\n                   // .innerRadius(radius - donutWidth)\n                    .innerRadius(0)\n                    .outerRadius(radius)\n                let pie = d3.pie()\n                    .value(function (d: any) { return d.count })\n                    .sort(null)*/\n                /*let path = svg.selectAll('path')\n                    .data(pie(dataset)\n                    .enter()\n                    .append('path')\n                    .attr('d', arc)\n                    .attr('fill', function (d: any, i: any) {\n                        return color(d.data.label)\n                    })*/\n\n                let bars = svg.selectAll('rect')\n                    .data(dataset)\n                    .enter()\n                    .append('rect')\n                    .attr('width', function (i: any) { return i.count / 10000 })\n                    .attr('height', 50)\n                    .attr('y', function (i: any, j: any) { return j * 50 })\n                    .attr('fill', '#3399FF')\n                console.log('dataset : ' + dataset)\n\n\n                // Todo limit nb (look pie chart of Google)\n                /*let legend = svg.selectAll('.legend')\n                    .data(color.domain())\n                    .enter()\n                    .append('g')\n                    .attr('class', 'legend')\n                    .attr('transform', function (d: any, i: any) {\n                        let height = legendRectSize + legendSpacing\n                        let offset = height * color.domain().length / 2\n                        let horz = -2 * legendRectSize\n                        let vert = i * height - offset\n                        return 'translate(' + (horz + radius * 2 + 20 ) + ',' + vert + ')'\n                    })\n                legend.append('rect')\n                    .attr('width', legendRectSize)\n                    .attr('height', legendRectSize)\n                    .style('fill', color)\n                    .style('stroke', color)\n                legend.append('text')\n                    .attr('x', legendRectSize + legendSpacing)\n                    .attr('y', legendRectSize - legendSpacing)\n                    .text(function (d: any) { return d })*/\n            }\n            // finish\n            return resolve()\n        })\n    }\n\n}\n","import {\n    Chart,\n    SparqlResultInterface,\n    Logger,\n    Core\n} from '../../sgvizler'\n\ndeclare let d3: any\n\n/**\n * Todo AreaChart\n * @class d3.visualization.AreaChart\n * @tutorial d3_visualization_AreaChart\n * @memberof d3.visualization\n */\nexport class AreaChart extends Chart {\n\n    public get icon (): string {\n        return 'fa-area-chart'\n    }\n\n    public get label (): string {\n        return 'AreaChart'\n    }\n\n    public get subtext (): string {\n        return 'AreaChart'\n    }\n\n    public get classFullName (): string {\n        return 'd3.visualization.AreaChart'\n    }\n\n    public get tutorialFilename (): string {\n        return 'tutorial-d3_visualization_AreaChart.html'\n    }\n\n    public constructor () {\n        super()\n        this.addCss(Core.path + '/lib/d3/d3.css')\n        let dep = this.addScript(Core.path + '/lib/d3/d3.js')\n    }\n\n    /**\n     * Make a simple line.\n     * Available options:\n     * -\n     * @memberOf AreaChart\n     * @returns {Promise<void>}\n     * @param result\n     */\n    public draw (result: SparqlResultInterface): Promise<any> {\n        let currentChart = this\n        return new Promise(function (resolve, reject) {\n            // transform query\n            // console.log(noCols + \" x \" + noRows)\n            console.log('test')\n            let heightOpt = '100%'\n            if (currentChart.height !== '') {\n                heightOpt = currentChart.height\n            }\n\n            let opt = Object.assign({\n                showRowNumber: false,\n                width: currentChart.width,\n                height: heightOpt\n            }, currentChart.options)\n\n            // build the datatable\n            /*let cols = result.head.vars\n            let rows = result.results.bindings\n            let noCols = cols.length\n            let noRows = rows.length\n            let dataset: Array<any> = []\n            let label\n            let count\n            let data = [{\n                date: '1-May-12',\n                close: 58.1\n            }]\n            for (let row of rows) {\n                label = row[cols[0]].value\n                count = Number(row[cols[1]].value)\n                if ( label === undefined || count === undefined) {\n                    Logger.logSimple('Erreur ? D3JS:pie label ' + label + ' count ' + count)\n                } else {\n                    dataset.push({ label: label , count: count })\n                }\n            }\n\n            console.log(data)\n            let margin = {\n                top: 30,\n                right: 20 * 3,\n                bottom: 30,\n                left: 50\n            }\n            let width = 800 - margin.left - margin.right\n            let height = 570 - margin.top - margin.bottom\n            let parseDate = d3.time.format('%d-%b-%y').parse\n            // x axis\n            let x = d3.scalePoint().range([0, width])\n            let xAxis = d3.axisBottom().scale(x).ticks(15)\n            // y axis\n            let y = d3.scaleLinear().range([height, 0])\n            let yAxis = d3.axisRight().scale(y).ticks(17)\n\n            let valueline = d3.line()\n                .x(function (d: any) {\n                  return x(d.date)\n                })\n                .y(function (d: any) {\n                  return y(d.close)\n                })\n            let svg = d3.select( '#' + currentChart.container.id)\n                .append('svg')\n                .attr('width', width + margin.left + margin.right)\n                .attr('height', height + margin.top + margin.bottom)\n                .append('g')\n                .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n// get data\n\ndata.forEach(function (d: any) {\n    d.date = parseDate(d.date)\n    d.close = +d.close\n})\n            svg.append('path') // Add the valueline path.\n            // .attr('fill', 'none')\n           // .attr('stroke', 'steelblue')\n           // .attr('stroke-linejoin', 'round')\n           // .attr('stroke-linecap', 'round')\n           // .attr('stroke-width', 1.5)\n          //  .attr('d', valueline(dataset))\n           .attr('d', valueline(data))\n            svg.append('g') // Add the X Axis\n            .attr('class', 'x axis')\n                .attr('transform', 'translate(0,' + height + ')')\n                .call(xAxis)\n            svg.append('g') // Add the Y Axis\n                .attr('class', 'y axis')\n                .call(yAxis)*/\n            // finish\n\n            // Example\n            let containerElement = d3.select('#' + currentChart.container.id)\n            let containerElementNode = containerElement.node() as any\n            if (containerElementNode) {\n                let width = containerElementNode.clientWidth !== 0 ? containerElementNode.clientWidth : 300\n                let height = containerElementNode.clientHeight !== 0 ? containerElementNode.clientHeight : 150\n                let svg = containerElement.append('svg') // associate our data with the document\n                    .attr('width', width)\n                    .attr('height', height)\n                    .attr('id', 'idtest')\n\n                let margin = { top: 20, right: 20, bottom: 30, left: 40 }\n                let widthChart = width - (margin.left + margin.right)\n                let heightChart = height - (margin.top + margin.bottom)\n\n                let xScale = d3.scaleLinear()\n                let yScale = d3.scaleLinear()\n\n                let xAxisCall = d3.axisBottom()\n                let yAxisCall = d3.axisLeft()\n\n                xScale.domain([0, 100]).range([0, widthChart])\n                yScale.domain([0, 100]).range([heightChart, 0])\n\n                xAxisCall.scale(xScale)\n                yAxisCall.scale(yScale)\n\n                let newX = svg.append('g')\n                // .attr('class', 'x axis')\n                    .attr('transform', 'translate(' + [margin.left, heightChart + margin.top] + ')')\n                    .call(xAxisCall)\n                let newY = svg.append('g')\n                // .attr('class', 'y axis')\n                    .attr('transform', 'translate(' + [margin.left, margin.top] + ')')\n                    .call(yAxisCall)\n\n            }\n            return resolve()\n        })\n    }\n}\n","/**\n * @namespace google\n */\nimport * as visualizationNS from './google/visualization'\nexport const visualization = visualizationNS\n\n// Class\nexport * from './google/Data'\nexport * from './google/Tools'\nexport * from './google/API'\n","/**\n * @namespace google.visualization\n */\n\n// Annotation Chart\n// https://developers.google.com/chart/interactive/docs/gallery/annotationchart\nexport * from './visualization/AnnotationChart'\n\n// AreaChart\n// https://developers.google.com/chart/interactive/docs/gallery/areachart\nexport * from './visualization/AreaChart'\n\n// BarChart\n// https://developers.google.com/chart/interactive/docs/gallery/barchart\nexport * from './visualization/BarChart'\n\n// BubbleChart\n// https://developers.google.com/chart/interactive/docs/gallery/bubblechart\nexport * from './visualization/BubbleChart'\n\n// Calendar\n// https://developers.google.com/chart/interactive/docs/gallery/calendar\nexport * from './visualization/Calendar'\n\n// CandlestickChart\n// https://developers.google.com/chart/interactive/docs/gallery/candlestickchart\nexport * from './visualization/CandlestickChart'\n\n// ColumnChart\n// https://developers.google.com/chart/interactive/docs/gallery/columnchart\nexport * from './visualization/ColumnChart'\n\n// ComboChart\n// https://developers.google.com/chart/interactive/docs/gallery/combochart\nexport * from './visualization/ComboChart'\n\n// GeoChart\n// https://developers.google.com/chart/interactive/docs/gallery/geochart\nexport * from './visualization/GeoChart'\n\n// Histogram\n// https://developers.google.com/chart/interactive/docs/gallery/histogram\nexport * from './visualization/Histogram'\n\n// IntervalChart\n// https://developers.google.com/chart/interactive/docs/gallery/intervals\nexport * from './visualization/IntervalChart'\n\n// LineChart\n// https://developers.google.com/chart/interactive/docs/gallery/linechart\nexport * from './visualization/LineChart'\n\n// Map\n// https://developers.google.com/chart/interactive/docs/gallery/map\nexport * from './visualization/Map'\n\n// MotionChart\n// https://developers.google.com/chart/interactive/docs/gallery/motionchart (obsolete ?)\n// todo with d3 ?\n\n// OrgChart\n// https://developers.google.com/chart/interactive/docs/gallery/orgchart\nexport * from './visualization/OrgChart'\n\n// Pie\n// https://developers.google.com/chart/interactive/docs/gallery/piechart\nexport * from './visualization/Pie'\n\n// Sankey Diagram\n// https://developers.google.com/chart/interactive/docs/gallery/sankey\n// todo ?\n\n// Scatter Chart\n// https://developers.google.com/chart/interactive/docs/gallery/scatterchart\nexport * from './visualization/ScatterChart'\n\n// SteppedAreaChart\n// https://developers.google.com/chart/interactive/docs/gallery/steppedareachart\nexport * from './visualization/SteppedAreaChart'\n\n// Table\n// https://developers.google.com/chart/interactive/docs/gallery/table\nexport * from './visualization/Table'\n\n// Timeline\n// https://developers.google.com/chart/interactive/docs/gallery/timeline\nexport * from './visualization/Timeline'\n\n// TreeMap\n// https://developers.google.com/chart/interactive/docs/gallery/treemap\nexport * from './visualization/TreeMap'\n\n// Trendline\n// https://developers.google.com/chart/interactive/docs/gallery/trendlines\nexport * from './visualization/Trendline'\n\n// Word Trees\n// https://developers.google.com/chart/interactive/docs/gallery/wordtree\n// todo\n","import {\n    Chart, Logger, MESSAGES,\n    SparqlResultInterface\n} from '../../sgvizler'\n\nimport { Tools } from '../Tools'\nimport { Data } from '../Data'\nimport { API } from '../API'\n\ndeclare let google: any\n\n/**\n * Todo Trendline\n * @class google.visualization.Trendline\n * @tutorial google_visualization_Trendline\n * @memberof google.visualization\n */\nexport class Trendline extends Chart {\n    private static _isInit: boolean = false\n\n    public constructor () {\n        super()\n        let dep = this.addScript('https://www.gstatic.com/charts/loader.js')\n    }\n\n    private static init () {\n        google.charts.load('current', {'packages': ['corechart']})\n        Trendline._isInit = true\n    }\n\n    public get icon (): string {\n        return 'fa-line-chart'\n    }\n\n    public get label (): string {\n        return 'Trendline'\n    }\n\n    public get subtext (): string {\n        return 'Trendline'\n    }\n\n    public get classFullName (): string {\n        return 'google.visualization.Trendline'\n    }\n\n    public get tutorialFilename (): string {\n        return 'tutorial-google_visualization_Trendline.html'\n    }\n\n    /**\n     * Make a standard simple html Trendline.\n     * Available options:\n     * - 'headings'   :  \"true\" / \"false\"  (default: \"true\")\n     * @memberOf Trendline\n     * @returns {Promise<void>}\n     * @param result\n     */\n    public draw (result: SparqlResultInterface): Promise<any> {\n        let currentChart = this\n        return new Promise(function (resolve, reject) {\n            // transform query\n            // console.log(noCols + \" x \" + noRows)\n\n            let height = 500\n            if (currentChart.height !== '') {\n                height = Tools.decodeFormatSize(currentChart.height)\n            }\n\n            let opt = Object.assign({\n                width: Tools.decodeFormatSize(currentChart.width),\n                height: height,\n                trendlines: { 0: {} }\n            }, currentChart.options)\n\n            if (! Trendline._isInit) {\n                Trendline.init()\n            }\n\n            google.charts.setOnLoadCallback(\n                () => {\n                    try {\n                        let data = new Data(result)\n                        let chart = new google.visualization.ScatterChart(document.getElementById(currentChart.container.id))\n                        chart.draw(data.getDataTable(), opt)\n                    } catch (error) {\n                        console.log(error)\n                        Logger.displayFeedback(currentChart.container, MESSAGES.ERROR_CHART, [error])\n                        Logger.log(currentChart.container,'Chart finished with error : ' + currentChart.container.id)\n                    }\n                }\n            )\n            // finish\n            return resolve()\n        })\n    }\n}\n","import {\n    Chart, Logger, MESSAGES,\n    SparqlResultInterface\n} from '../../sgvizler'\n\nimport { Tools } from '../Tools'\nimport { Data } from '../Data'\nimport { API } from '../API'\n\ndeclare let google: any\n\n/**\n * Todo TreeMap\n * @class google.visualization.TreeMap\n * @tutorial google_visualization_TreeMap\n * @memberof google.visualization\n */\nexport class TreeMap extends Chart {\n    private static _isInit: boolean = false\n\n    public constructor () {\n        super()\n        let dep = this.addScript('https://www.gstatic.com/charts/loader.js')\n    }\n\n    private static init () {\n        google.charts.load('current', {'packages': ['treemap']})\n        TreeMap._isInit = true\n    }\n\n    public get icon (): string {\n        return 'fa-area-chart'\n    }\n\n    public get label (): string {\n        return 'TreeMap'\n    }\n\n    public get subtext (): string {\n        return 'TreeMap'\n    }\n\n    public get classFullName (): string {\n        return 'google.visualization.TreeMap'\n    }\n\n    public get tutorialFilename (): string {\n        return 'tutorial-google_visualization_TreeMap.html'\n    }\n\n    /**\n     * Make a standard simple html table.\n     * Available options:\n     * - 'headings'   :  \"true\" / \"false\"  (default: \"true\")\n     * @memberOf Table\n     * @returns {Promise<void>}\n     * @param result\n     */\n    public draw (result: SparqlResultInterface): Promise<any> {\n        let currentChart = this\n        return new Promise(function (resolve, reject) {\n            // transform query\n            // console.log(noCols + \" x \" + noRows)\n\n            let height = 500\n            if (currentChart.height !== '') {\n                height = Tools.decodeFormatSize(currentChart.height)\n            }\n\n            let opt = Object.assign({\n                width: Tools.decodeFormatSize(currentChart.width),\n                height: height\n            }, currentChart.options)\n\n            if (! TreeMap._isInit) {\n                TreeMap.init()\n            }\n\n            google.charts.setOnLoadCallback(\n                () => {\n                    try {\n                        let data = new Data(result)\n                        let treeMap = new google.visualization.TreeMap(document.getElementById(currentChart.container.id))\n                        treeMap.draw(data.getDataTable(), opt)\n                    } catch (error) {\n                        console.log(error)\n                        Logger.displayFeedback(currentChart.container, MESSAGES.ERROR_CHART, [error])\n                        Logger.log(currentChart.container,'Chart finished with error : ' + currentChart.container.id)\n                    }\n                }\n            )\n            // finish\n            return resolve()\n        })\n    }\n}\n","import {\n    Chart, Logger, MESSAGES,\n    SparqlResultInterface\n} from '../../sgvizler'\n\nimport { Tools } from '../Tools'\nimport { Data } from '../Data'\nimport { API } from '../API'\n\ndeclare let google: any\n\n/**\n * Todo Timeline\n * @class google.visualization.Timeline\n * @tutorial google_visualization_Timeline\n * @memberof google.visualization\n */\nexport class Timeline extends Chart {\n    private static _isInit: boolean = false\n\n    public constructor () {\n        super()\n        let dep = this.addScript('https://www.gstatic.com/charts/loader.js')\n    }\n\n    private static init () {\n        google.charts.load('current', {'packages': ['timeline']})\n        Timeline._isInit = true\n    }\n\n    public get icon (): string {\n        return 'fa-tasks'\n    }\n\n    public get label (): string {\n        return 'Timeline'\n    }\n\n    public get subtext (): string {\n        return 'Timeline'\n    }\n\n    public get classFullName (): string {\n        return 'google.visualization.Timeline'\n    }\n\n    public get tutorialFilename (): string {\n        return 'tutorial-google_visualization_Timeline.html'\n    }\n\n    /**\n     * Make a standard simple html Timeline.\n     * Available options:\n     * - 'headings'   :  \"true\" / \"false\"  (default: \"true\")\n     * @memberOf Timeline\n     * @returns {Promise<void>}\n     * @param result\n     */\n    public draw (result: SparqlResultInterface): Promise<any> {\n        let currentChart = this\n        return new Promise(function (resolve, reject) {\n            // transform query\n            // console.log(noCols + \" x \" + noRows)\n\n            let height = 500\n            if (currentChart.height !== '') {\n                height = Tools.decodeFormatSize(currentChart.height)\n            }\n\n            let opt = Object.assign({\n                width: Tools.decodeFormatSize(currentChart.width),\n                height: height\n            }, currentChart.options)\n\n            if (! Timeline._isInit) {\n                Timeline.init()\n            }\n\n            google.charts.setOnLoadCallback(\n                () => {\n                    try {\n                        let data = new Data(result)\n                        let timeline = new google.visualization.Timeline(document.getElementById(currentChart.container.id))\n                        timeline.draw(data.getDataTable(), opt)\n                    } catch (error) {\n                        console.log(error)\n                        Logger.displayFeedback(currentChart.container, MESSAGES.ERROR_CHART, [error])\n                        Logger.log(currentChart.container,'Chart finished with error : ' + currentChart.container.id)\n                    }\n                }\n            )\n            // finish\n            return resolve()\n        })\n    }\n}\n","import {\n    Chart, Logger, MESSAGES,\n    SparqlResultInterface\n} from '../../sgvizler'\n\nimport { Tools } from '../Tools'\nimport { Data } from '../Data'\nimport { API } from '../API'\n\ndeclare let google: any\n\n/**\n * Todo Table\n * @class google.visualization.Table\n * @tutorial google_visualization_Table\n * @memberof google.visualization\n */\nexport class Table extends Chart {\n    private static _isInit: boolean = false\n\n    public constructor () {\n        super()\n        let dep = this.addScript('https://www.gstatic.com/charts/loader.js')\n    }\n\n    private static init () {\n        google.charts.load('current', {'packages': ['table']})\n        Table._isInit = true\n    }\n\n    public get icon (): string {\n        return 'fa-table'\n    }\n\n    public get label (): string {\n        return 'Table'\n    }\n\n    public get subtext (): string {\n        return 'Table'\n    }\n\n    public get classFullName (): string {\n        return 'google.visualization.Table'\n    }\n\n    public get tutorialFilename (): string {\n        return 'tutorial-google_visualization_Table.html'\n    }\n\n    /**\n     * Make a standard simple html table.\n     * Available options:\n     * - 'headings'   :  \"true\" / \"false\"  (default: \"true\")\n     * @memberOf Table\n     * @returns {Promise<void>}\n     * @param result\n     */\n    public draw (result: SparqlResultInterface): Promise<any> {\n        let currentChart = this\n        return new Promise(function (resolve, reject) {\n            // transform query\n            // console.log(noCols + \" x \" + noRows)\n\n            let height = '100%'\n            if (currentChart.height !== '') {\n                height = Tools.decodeFormatSize(currentChart.height)\n            }\n\n            let opt = Object.assign({\n                raw: true,\n                showRowNumber: false,\n                width: Tools.decodeFormatSize(currentChart.width),\n                height: height\n            }, currentChart.options)\n\n            if (! Table._isInit) {\n                Table.init()\n            }\n\n            google.charts.setOnLoadCallback(\n                () => {\n                    try {\n                        let data = new Data(result,opt.raw)\n                        let table = new google.visualization.Table(document.getElementById(currentChart.container.id))\n                        table.draw(data.getDataTable(), opt)\n                    } catch (error) {\n                        console.log(error)\n                        Logger.displayFeedback(currentChart.container, MESSAGES.ERROR_CHART, [error])\n                        Logger.log(currentChart.container,'Chart finished with error : ' + currentChart.container.id)\n                    }\n                }\n            )\n            // finish\n            return resolve()\n        })\n    }\n}\n","import {\n    Chart, Logger, MESSAGES,\n    SparqlResultInterface\n} from '../../sgvizler'\n\nimport { Tools } from '../Tools'\nimport { Data } from '../Data'\nimport { API } from '../API'\n\ndeclare let google: any\n\n/**\n * Todo SteppedAreaChart\n * @class google.visualization.SteppedAreaChart\n * @tutorial google_visualization_SteppedAreaChart\n * @memberof google.visualization\n */\nexport class SteppedAreaChart extends Chart {\n    private static _isInit: boolean = false\n\n    public constructor () {\n        super()\n        let dep = this.addScript('https://www.gstatic.com/charts/loader.js')\n    }\n\n    private static init () {\n        google.charts.load('current', {'packages': ['corechart']})\n        SteppedAreaChart._isInit = true\n    }\n\n    public get icon (): string {\n        return 'fa-area-chart'\n    }\n\n    public get label (): string {\n        return 'SteppedAreaChart'\n    }\n\n    public get subtext (): string {\n        return 'SteppedAreaChart'\n    }\n\n    public get classFullName (): string {\n        return 'google.visualization.SteppedAreaChart'\n    }\n\n    public get tutorialFilename (): string {\n        return 'tutorial-google_visualization_SteppedAreaChart.html'\n    }\n\n    /**\n     * Make a standard simple html table.\n     * Available options:\n     * - 'headings'   :  \"true\" / \"false\"  (default: \"true\")\n     * @memberOf Table\n     * @returns {Promise<void>}\n     * @param result\n     */\n    public draw (result: SparqlResultInterface): Promise<any> {\n        let currentChart = this\n        return new Promise(function (resolve, reject) {\n            // transform query\n            // console.log(noCols + \" x \" + noRows)\n\n            let height = 500\n            if (currentChart.height !== '') {\n                height = Tools.decodeFormatSize(currentChart.height)\n            }\n\n            let opt = Object.assign({\n                width: Tools.decodeFormatSize(currentChart.width),\n                height: height\n            }, currentChart.options)\n\n            if (! SteppedAreaChart._isInit) {\n                SteppedAreaChart.init()\n            }\n\n            google.charts.setOnLoadCallback(\n                () => {\n                    try {\n                        let data = new Data(result)\n                        let steppedAreaChart = new google.visualization.SteppedAreaChart(document.getElementById(currentChart.container.id))\n                        steppedAreaChart.draw(data.getDataTable(), opt)\n                    } catch (error) {\n                        console.log(error)\n                        Logger.displayFeedback(currentChart.container, MESSAGES.ERROR_CHART, [error])\n                        Logger.log(currentChart.container,'Chart finished with error : ' + currentChart.container.id)\n                    }\n                }\n            )\n            // finish\n            return resolve()\n        })\n    }\n}\n","import {\n    Chart, Logger, MESSAGES,\n    SparqlResultInterface\n} from '../../sgvizler'\n\nimport { Tools } from '../Tools'\nimport { Data } from '../Data'\nimport { API } from '../API'\n\ndeclare let google: any\n\n/**\n * Todo ScatterChart\n * @class google.visualization.ScatterChart\n * @tutorial google_visualization_ScatterChart\n * @memberof google.visualization\n */\nexport class ScatterChart extends Chart {\n    private static _isInit: boolean = false\n\n    public constructor () {\n        super()\n        let dep = this.addScript('https://www.gstatic.com/charts/loader.js')\n    }\n\n    private static init () {\n        google.charts.load('current', {'packages': ['corechart']})\n        ScatterChart._isInit = true\n    }\n\n    public get icon (): string {\n        return 'fa-circle'\n    }\n\n    public get label (): string {\n        return 'ScatterChart'\n    }\n\n    public get subtext (): string {\n        return 'ScatterChart'\n    }\n\n    public get classFullName (): string {\n        return 'google.visualization.ScatterChart'\n    }\n\n    public get tutorialFilename (): string {\n        return 'tutorial-google_visualization_ScatterChart.html'\n    }\n\n    /**\n     * Make a standard simple html table.\n     * Available options:\n     * - 'headings'   :  \"true\" / \"false\"  (default: \"true\")\n     * @memberOf ScatterChart\n     * @returns {Promise<void>}\n     * @param result\n     */\n    public draw (result: SparqlResultInterface): Promise<any> {\n        let currentChart = this\n        return new Promise(function (resolve, reject) {\n            // transform query\n            // console.log(noCols + \" x \" + noRows)\n\n            let height = 500\n            if (currentChart.height !== '') {\n                height = Tools.decodeFormatSize(currentChart.height)\n            }\n\n            let opt = Object.assign({\n                width: Tools.decodeFormatSize(currentChart.width),\n                height: height\n            }, currentChart.options)\n\n            if (! ScatterChart._isInit) {\n                ScatterChart.init()\n            }\n\n            google.charts.setOnLoadCallback(\n                () => {\n                    try {\n                        let data = new Data(result)\n                        let chart = new google.visualization.ScatterChart(document.getElementById(currentChart.container.id))\n                        chart.draw(data.getDataTable(), opt)\n                    } catch (error) {\n                        console.log(error)\n                        Logger.displayFeedback(currentChart.container, MESSAGES.ERROR_CHART, [error])\n                        Logger.log(currentChart.container,'Chart finished with error : ' + currentChart.container.id)\n                    }\n                }\n            )\n\n            // finish\n            return resolve()\n        })\n    }\n}\n","import {\n    Chart, Logger, MESSAGES,\n    SparqlResultInterface\n} from '../../sgvizler'\n\nimport { Tools } from '../Tools'\nimport { Data } from '../Data'\nimport { API } from '../API'\n\ndeclare let google: any\n\n/**\n * Todo Pie\n * @class google.visualization.Pie\n * @tutorial google_visualization_Pie\n * @memberof google.visualization\n */\nexport class Pie extends Chart {\n    private static _isInit: boolean = false\n\n    public constructor () {\n        super()\n        let dep = this.addScript('https://www.gstatic.com/charts/loader.js')\n    }\n\n    private static init () {\n        google.charts.load('current', {'packages': ['corechart']})\n        Pie._isInit = true\n    }\n\n    public get icon (): string {\n        return 'fa-pie-chart'\n    }\n\n    public get label (): string {\n        return 'Pie'\n    }\n\n    public get subtext (): string {\n        return 'Pie'\n    }\n\n    public get classFullName (): string {\n        return 'google.visualization.Pie'\n    }\n\n    public get tutorialFilename (): string {\n        return 'tutorial-google_visualization_Pie.html'\n    }\n\n    /**\n     * Make a standard simple html pie.\n     * Available options:\n     * - 'headings'   :  \"true\" / \"false\"  (default: \"true\")\n     * @memberOf Pie\n     * @returns {Promise<void>}\n     * @param result\n     */\n    public draw (result: SparqlResultInterface): Promise<any> {\n        let currentChart = this\n        return new Promise(function (resolve, reject) {\n            // transform query\n            // console.log(noCols + \" x \" + noRows)\n\n            let height = 500\n            if (currentChart.height !== '') {\n                height = Tools.decodeFormatSize(currentChart.height)\n            }\n            let opt = Object.assign({\n                width: Tools.decodeFormatSize(currentChart.width),\n                height: height\n            }, currentChart.options)\n\n            if (! Pie._isInit) {\n                Pie.init()\n            }\n\n            google.charts.setOnLoadCallback(\n                () => {\n                    try {\n                        let data = new Data(result)\n                        let Pie = new google.visualization.PieChart(document.getElementById(currentChart.container.id))\n                        Pie.draw(data.getDataTable(), opt)\n                    } catch (error) {\n                        console.log(error)\n                        Logger.displayFeedback(currentChart.container, MESSAGES.ERROR_CHART, [error])\n                        Logger.log(currentChart.container,'Chart finished with error : ' + currentChart.container.id)\n                    }\n                }\n            )\n            // finish\n            return resolve()\n        })\n    }\n}\n","import {\n    Chart, Logger, MESSAGES,\n    SparqlResultInterface\n} from '../../sgvizler'\n\nimport { Tools } from '../Tools'\nimport { Data } from '../Data'\nimport { API } from '../API'\n\ndeclare let google: any\n\n/**\n * Todo OrgChart\n * @class google.visualization.OrgChart\n * @tutorial google_visualization_OrgChart\n * @memberof google.visualization\n */\nexport class OrgChart extends Chart {\n    private static _isInit: boolean = false\n\n    public constructor () {\n        super()\n        let dep = this.addScript('https://www.gstatic.com/charts/loader.js')\n    }\n\n    private static init () {\n        google.charts.load('current', {'packages': ['orgchart']})\n        OrgChart._isInit = true\n    }\n\n    public get icon (): string {\n        return 'fa-sitemap'\n    }\n\n    public get label (): string {\n        return 'OrgChart'\n    }\n\n    public get subtext (): string {\n        return 'OrgChart'\n    }\n\n    public get classFullName (): string {\n        return 'google.visualization.OrgChart'\n    }\n\n    public get tutorialFilename (): string {\n        return 'tutorial-google_visualization_OrgChart.html'\n    }\n\n    /**\n     * Make a standard simple html OrgChart.\n     * Available options:\n     * - 'headings'   :  \"true\" / \"false\"  (default: \"true\")\n     * @memberOf OrgChart\n     * @returns {Promise<void>}\n     * @param result\n     */\n    public draw (result: SparqlResultInterface): Promise<any> {\n        let currentChart = this\n        return new Promise(function (resolve, reject) {\n            // transform query\n            // console.log(noCols + \" x \" + noRows)\n\n            let height = 500\n            if (currentChart.height !== '') {\n                height = Tools.decodeFormatSize(currentChart.height)\n            }\n\n            let opt = Object.assign({\n                width: Tools.decodeFormatSize(currentChart.width),\n                height: height,\n                allowHtml: true\n            }, currentChart.options)\n\n            if (! OrgChart._isInit) {\n                OrgChart.init()\n            }\n\n            google.charts.setOnLoadCallback(\n                () => {\n                    try {\n                        let data = new Data(result)\n                        let orgChart = new google.visualization.OrgChart(document.getElementById(currentChart.container.id))\n                        orgChart.draw(data.getDataTable(), opt)\n                    } catch (error) {\n                        console.log(error)\n                        Logger.displayFeedback(currentChart.container, MESSAGES.ERROR_CHART, [error])\n                        Logger.log(currentChart.container,'Chart finished with error : ' + currentChart.container.id)\n                    }\n                }\n            )\n            // finish\n            return resolve()\n        })\n    }\n}\n","import {\n    Chart, Logger, MESSAGES,\n    SparqlResultInterface\n} from '../../sgvizler'\n\nimport { Tools } from '../Tools'\nimport { Data } from '../Data'\nimport { API } from '../API'\n\ndeclare let google: any\n\n/**\n * Todo Table\n * @class google.visualization.Map\n * @tutorial google_visualization_Map\n * @memberof google.visualization\n */\nexport class Map extends Chart {\n    private static _isInit: boolean = false\n\n    public constructor () {\n        super()\n        let dep = this.addScript('https://www.gstatic.com/charts/loader.js')\n    }\n\n    private static init () {\n        google.charts.load('current', {'packages': ['map'] , mapsApiKey: API.key })\n        Map._isInit = true\n    }\n\n    public get icon (): string {\n        return 'fa-map'\n    }\n\n    public get label (): string {\n        return 'Map'\n    }\n\n    public get subtext (): string {\n        return 'Map'\n    }\n\n    public get classFullName (): string {\n        return 'google.visualization.Map'\n    }\n\n    public get tutorialFilename (): string {\n        return 'tutorial-google_visualization_Map.html'\n    }\n\n    /**\n     * Make a Google map\n     * todo\n     * @memberOf Map\n     * @returns {Promise<void>}\n     * @param result\n     */\n    public draw (result: SparqlResultInterface): Promise<any> {\n        let currentChart = this\n        return new Promise(function (resolve, reject) {\n            let height = 500\n            if (currentChart.height !== '') {\n                height = Tools.decodeFormatSize(currentChart.height)\n            }\n\n            let opt = Object.assign({\n                width: Tools.decodeFormatSize(currentChart.width),\n                height: height,\n                showTooltip: false,\n                showInfoWindow: true,\n                enableScrollWheel: true\n            }, currentChart.options)\n\n            // fix bug in local\n            if (location.origin.startsWith('file:')) {\n                opt = Object.assign({\n                    icons: {\n                        default: {\n                            normal: 'https://maps.google.com/mapfiles/ms/micons/red-dot.png',\n                            selected: 'https://maps.google.com/mapfiles/ms/micons/blue-dot.png'\n                        }\n                    }\n                }, opt)\n            }\n\n            // init only one time\n            if (! Map._isInit) {\n                Map.init()\n            }\n\n             google.charts.setOnLoadCallback(\n                 () => {\n                     try {\n                         let messageError = ''\n                         let cols = result.head.vars\n                         let rows = result.results.bindings\n                         let noCols = cols.length\n                         let noRows = rows.length\n\n                         let lat\n                         let long\n                         let description\n\n                         let data = new google.visualization.DataTable()\n\n                         if (noCols <= 2) {\n                             messageError = 'Parameters : latitude(xsd:Decimal) longitude(xsd:Decimal) title(xsd:string' +\n                                 ' optional) introduction(xsd:string optional) link(IRI optional)'\n                         } else {\n                             let latitudeCol = 0\n                             let longitudeCol = 1\n                             let descriptionCol = 2\n                             data.addColumn('number', latitudeCol)\n                             data.addColumn('number', longitudeCol)\n\n                             if (noCols > 2) {\n                                 data.addColumn('string', descriptionCol)\n                             }\n\n                             data.addRows(noRows)\n\n                             for (let x = 0; x < noRows; x++) {\n                                 lat = parseFloat(rows[x][cols[latitudeCol]].value)\n                                 long = parseFloat(rows[x][cols[longitudeCol]].value)\n                                 description = ''\n                                 if (isNaN(lat) || isNaN(long)) {\n                                     messageError = 'Latitude or longitude is not a decimal. Parameters of chart :' +\n                                         ' latitude(xsd:Decimal)' +\n                                         ' longitude(xsd:Decimal) title(xsd:string' +\n                                         ' optional) introduction(xsd:string optional) link(IRI optional). '\n                                     break\n                                 }\n                                 if (noCols >= 6) {\n                                     // latitude longitude title text link\n                                     let title = rows[x][cols[2]] !== undefined ? rows[x][cols[2]].value : ''\n                                     let text = rows[x][cols[3]] !== undefined ? \"<p style='margin: 0px'>\" + rows[x][cols[3]].value + '</p>' : ''\n                                     let link = rows[x][cols[4]] !== undefined ? \"<a style='font-size: large;font-style: medium;' href='\" + rows[x][cols[4]].value + \"' target='_blank'>\" + title + '</a>' : title\n                                     let img = rows[x][cols[5]] !== undefined ? \"<img src='\" + rows[x][cols[5]].value + \"' style='margin-left:5px;margin-bottom:5px;width:150px;float:right;'/>\" : ''\n\n                                     if (rows[x][cols[3]] === undefined || rows[x][cols[3]].value.length === 0) {\n                                         description = '<div style=\"display: flow-root;min-width: 150px;min-height:150px;\">' + link + '<div>' + img + '</div></div>'\n                                     } else {\n                                         description = '<div style=\"display: flow-root;width: 350px;min-height:150px;\">' + link + '<div>' + img + text + '</div></div>'\n                                     }\n\n                                     data.setCell(x, latitudeCol, lat)\n                                     data.setCell(x, longitudeCol, long)\n                                     data.setCell(x, descriptionCol, description)\n                                 } else if (noCols === 5) {\n                                     // latitude longitude title introduction link\n                                     let title = rows[x][cols[2]] !== undefined ? rows[x][cols[2]].value : ''\n                                     let text = rows[x][cols[3]] !== undefined ? rows[x][cols[3]].value : ''\n                                     let link = rows[x][cols[4]] !== undefined ? \"<a href='\" + rows[x][cols[4]].value + \"'>\" + title + '</a>' : title\n\n                                     description = '<b>' + link + '</b><br/>' + text\n\n                                     data.setCell(x, latitudeCol, lat)\n                                     data.setCell(x, longitudeCol, long)\n                                     data.setCell(x, descriptionCol, description)\n                                 } else if (noCols === 4) {\n                                     // latitude longitude title introduction\n                                     let title = rows[x][cols[2]] !== undefined ? rows[x][cols[2]].value : ''\n                                     let text = rows[x][cols[3]] !== undefined ? rows[x][cols[3]].value : ''\n\n                                     description = '<b>' + title + '</b><br/>' + text\n\n                                     data.setCell(x, latitudeCol, lat)\n                                     data.setCell(x, longitudeCol, long)\n                                     data.setCell(x, descriptionCol, description)\n                                 } else if (noCols === 3) {\n                                     // latitude longitude title\n                                     let title = rows[x][cols[2]] !== undefined ? rows[x][cols[2]].value : ''\n\n                                     description = '<b>' + title + '</br>'\n\n                                     data.setCell(x, latitudeCol, lat)\n                                     data.setCell(x, longitudeCol, long)\n                                     data.setCell(x, descriptionCol, description)\n                                 } else if (noCols === 2) {\n                                     // latitude longitude\n\n                                     data.setCell(x, latitudeCol, lat)\n                                     data.setCell(x, longitudeCol, long)\n                                 }\n                             }\n                         }\n                         if (messageError !== '') {\n                             return reject(Error(messageError))\n                         }\n                        let table = new google.visualization.Map(document.getElementById(currentChart.container.id))\n                        table.draw(data, opt)\n                     } catch (error) {\n                        console.log(error)\n                        Logger.displayFeedback(currentChart.container, MESSAGES.ERROR_CHART, [error])\n                        Logger.log(currentChart.container,'Chart finished with error : ' + currentChart.container.id)\n                    }\n                }\n            )\n            // finish\n            return resolve()\n        })\n    }\n}\n","import {\n    Chart, Logger, MESSAGES,\n    SparqlResultInterface\n} from '../../sgvizler'\n\nimport { Tools } from '../Tools'\nimport { Data } from '../Data'\nimport { API } from '../API'\n\ndeclare let google: any\n\n/**\n * Todo LineChart\n * @class google.visualization.LineChart\n * @tutorial google_visualization_LineChart\n * @memberof google.visualization\n */\nexport class LineChart extends Chart {\n    private static _isInit: boolean = false\n\n    public constructor () {\n        super()\n        let dep = this.addScript('https://www.gstatic.com/charts/loader.js')\n    }\n\n    private static init () {\n        google.charts.load('current', {'packages': ['corechart','line']})\n        LineChart._isInit = true\n    }\n\n    public get icon (): string {\n        return 'fa-line-chart'\n    }\n\n    public get label (): string {\n        return 'Line'\n    }\n\n    public get subtext (): string {\n        return 'Line'\n    }\n\n    public get classFullName (): string {\n        return 'google.visualization.LineChart'\n    }\n\n    public get tutorialFilename (): string {\n        return 'tutorial-google_visualization_LineChart.html'\n    }\n\n    /**\n     * Draw a LineChart\n     * @memberOf LineChart\n     * @returns {Promise<void>}\n     * @param result\n     */\n    public draw (result: SparqlResultInterface): Promise<any> {\n        let currentChart = this\n        return new Promise(function (resolve, reject) {\n\n            let height = '500'\n            if (currentChart.height !== '') {\n                height = Tools.decodeFormatSize(currentChart.height)\n            }\n\n            let opt = Object.assign({\n                width: Tools.decodeFormatSize(currentChart.width),\n                height: height\n            }, currentChart.options)\n\n            if (! LineChart._isInit) {\n                LineChart.init()\n            }\n\n            google.charts.setOnLoadCallback(\n                () => {\n                    try {\n                        let data = new Data(result)\n                        let line = new google.visualization.LineChart(document.getElementById(currentChart.container.id))\n                        line.draw(data.getDataTable(), opt)\n                    } catch (error) {\n                        console.log(error)\n                        Logger.displayFeedback(currentChart.container, MESSAGES.ERROR_CHART, [error])\n                        Logger.log(currentChart.container,'Chart finished with error : ' + currentChart.container.id)\n                    }\n                }\n            )\n            // finish\n            return resolve()\n        })\n    }\n}\n","import {\n    Chart, Logger, MESSAGES,\n    SparqlResultInterface\n} from '../../sgvizler'\n\nimport { Tools } from '../Tools'\nimport { Data } from '../Data'\nimport { API } from '../API'\n\ndeclare let google: any\n\n/**\n * Todo IntervalChart\n * @class google.visualization.IntervalChart\n * @tutorial google_visualization_IntervalChart\n * @memberof google.visualization\n */\nexport class IntervalChart extends Chart {\n    private static _isInit: boolean = false\n\n    public constructor () {\n        super()\n        let dep = this.addScript('https://www.gstatic.com/charts/loader.js')\n    }\n\n    private static init () {\n        google.charts.load('current', {'packages': ['corechart','line']})\n        IntervalChart._isInit = true\n    }\n\n    public get icon (): string {\n        return 'fa-line-chart'\n    }\n\n    public get label (): string {\n        return 'Interval'\n    }\n\n    public get subtext (): string {\n        return 'Interval'\n    }\n\n    public get classFullName (): string {\n        return 'google.visualization.IntervalChart'\n    }\n\n    public get tutorialFilename (): string {\n        return 'tutorial-google_visualization_IntervalChart.html'\n    }\n\n    /**\n     * Draw a IntervalChart\n     * @memberOf IntervalChart\n     * @returns {Promise<void>}\n     * @param result\n     */\n    public draw (result: SparqlResultInterface): Promise<any> {\n        let currentChart = this\n        return new Promise(function (resolve, reject) {\n\n            let height = 500\n            if (currentChart.height !== '') {\n                height = Tools.decodeFormatSize(currentChart.height)\n            }\n\n            let opt = Object.assign({\n                width: Tools.decodeFormatSize(currentChart.width),\n                height: height\n            }, currentChart.options)\n\n            if (! IntervalChart._isInit) {\n                IntervalChart.init()\n            }\n\n            google.charts.setOnLoadCallback(\n                () => {\n                    try {\n                        let data = new Data(result)\n                        let cols = result.head.vars\n                        let noCols = cols.length\n\n                        for (let y = 2; y < noCols; y++) {\n                            data.setRole(y,'interval')\n                        }\n\n                        let line = new google.visualization.LineChart(document.getElementById(currentChart.container.id))\n                        line.draw(data.getDataTable(), opt)\n                    } catch (error) {\n                        console.log(error)\n                        Logger.displayFeedback(currentChart.container, MESSAGES.ERROR_CHART, [error])\n                        Logger.log(currentChart.container,'Chart finished with error : ' + currentChart.container.id)\n                    }\n                }\n            )\n            // finish\n            return resolve()\n        })\n    }\n}\n","import {\n    Chart, Logger, MESSAGES,\n    SparqlResultInterface\n} from '../../sgvizler'\n\nimport { Tools } from '../Tools'\nimport { Data } from '../Data'\nimport { API } from '../API'\n\ndeclare let google: any\n\n/**\n * Todo Histogram\n * @class google.visualization.Histogram\n * @tutorial google_visualization_Histogram\n * @memberof google.visualization\n */\nexport class Histogram extends Chart {\n    private static _isInit: boolean = false\n\n    public constructor () {\n        super()\n        let dep = this.addScript('https://www.gstatic.com/charts/loader.js')\n    }\n\n    private static init () {\n        google.charts.load('current', {'packages': ['corechart']})\n        Histogram._isInit = true\n    }\n\n    public get icon (): string {\n        return 'fa-area-chart'\n    }\n\n    public get label (): string {\n        return 'Histogram'\n    }\n\n    public get subtext (): string {\n        return 'Histogram'\n    }\n\n    public get classFullName (): string {\n        return 'google.visualization.Histogram'\n    }\n\n    public get tutorialFilename (): string {\n        return 'tutorial-google_visualization_Histogram.html'\n    }\n\n    /**\n     * Make a standard simple html Histogram.\n     * Available options:\n     * - 'headings'   :  \"true\" / \"false\"  (default: \"true\")\n     * @memberOf Histogram\n     * @returns {Promise<void>}\n     * @param result\n     */\n    public draw (result: SparqlResultInterface): Promise<any> {\n        let currentChart = this\n        return new Promise(function (resolve, reject) {\n            // transform query\n            // console.log(noCols + \" x \" + noRows)\n\n            let height = 500\n            if (currentChart.height !== '') {\n                height = Tools.decodeFormatSize(currentChart.height)\n            }\n\n            let opt = Object.assign({\n                width: Tools.decodeFormatSize(currentChart.width),\n                height: height\n            }, currentChart.options)\n\n            if (! Histogram._isInit) {\n                Histogram.init()\n            }\n\n            google.charts.setOnLoadCallback(\n                () => {\n                    try {\n                        let data = new Data(result)\n                        let histogram = new google.visualization.Histogram(document.getElementById(currentChart.container.id))\n                        histogram.draw(data.getDataTable(), opt)\n                    } catch (error) {\n                        console.log(error)\n                        Logger.displayFeedback(currentChart.container, MESSAGES.ERROR_CHART, [error])\n                        Logger.log(currentChart.container,'Chart finished with error : ' + currentChart.container.id)\n                    }\n                }\n            )\n            // finish\n            return resolve()\n        })\n    }\n}\n","import {\n    Chart, Logger, MESSAGES,\n    SparqlResultInterface\n} from '../../sgvizler'\n\nimport { Tools } from '../Tools'\nimport { Data } from '../Data'\nimport { API } from '../API'\n\ndeclare let google: any\n\n/**\n * Todo GeoChart\n * @class google.visualization.GeoChart\n * @tutorial google_visualization_GeoChart\n * @memberof google.visualization\n */\nexport class GeoChart extends Chart {\n    private static _isInit: boolean = false\n\n    public constructor () {\n        super()\n        let dep = this.addScript('https://www.gstatic.com/charts/loader.js')\n    }\n\n    private static init () {\n        google.charts.load('current', {'packages': ['geochart'], mapsApiKey: API.key})\n        GeoChart._isInit = true\n    }\n\n    public get icon (): string {\n        return 'fa-globe'\n    }\n\n    public get label (): string {\n        return 'GeoChart'\n    }\n\n    public get subtext (): string {\n        return 'GeoChart'\n    }\n\n    public get classFullName (): string {\n        return 'google.visualization.GeoChart'\n    }\n\n    public get tutorialFilename (): string {\n        return 'tutorial-google_visualization_GeoChart.html'\n    }\n\n    /**\n     * Make a standard simple html geochart.\n     * Available options:\n     * - 'headings'   :  \"true\" / \"false\"  (default: \"true\")\n     * @memberOf GeoChart\n     * @returns {Promise<void>}\n     * @param result\n     */\n    public draw (result: SparqlResultInterface): Promise<any> {\n        let currentChart = this\n        return new Promise(function (resolve, reject) {\n            // transform query\n            // console.log(noCols + \" x \" + noRows)\n\n            let height = 500\n            if (currentChart.height !== '') {\n                height = Tools.decodeFormatSize(currentChart.height)\n            }\n\n            let opt = Object.assign({\n                width: Tools.decodeFormatSize(currentChart.width),\n                height: height\n            }, currentChart.options)\n\n            if (! GeoChart._isInit) {\n                GeoChart.init()\n            }\n\n            google.charts.setOnLoadCallback(\n                () => {\n                    try {\n                        let data = new Data(result)\n                        let geochart = new google.visualization.GeoChart(document.getElementById(currentChart.container.id))\n                        geochart.draw(data.getDataTable(), opt)\n                    } catch (error) {\n                        console.log(error)\n                        Logger.displayFeedback(currentChart.container, MESSAGES.ERROR_CHART, [error])\n                        Logger.log(currentChart.container,'Chart finished with error : ' + currentChart.container.id)\n                    }\n                }\n            )\n            // finish\n            return resolve()\n        })\n    }\n}\n","/**\n * Todo API\n * @class google.API\n * @memberof google\n */\nexport class API {\n    /**\n     * todo\n     * @returns {string}\n     */\n    static get key (): string {\n        return this._key\n    }\n\n    /**\n     * todo\n     * @param {string} value\n     */\n    static set key (value: string) {\n        this._key = value\n    }\n\n    /**\n     * todo\n     * @type {string}\n     * @private\n     */\n    private static _key: string = ''\n}\n","import {\n    Chart, Logger, MESSAGES,\n    SparqlResultInterface\n} from '../../sgvizler'\n\nimport { Tools } from '../Tools'\nimport { Data } from '../Data'\nimport { API } from '../API'\n\ndeclare let google: any\n\n/**\n * Todo ComboChart\n * @class google.visualization.ComboChart\n * @tutorial google_visualization_ComboChart\n * @memberof google.visualization\n */\nexport class ComboChart extends Chart {\n    private static _isInit: boolean = false\n\n    public constructor () {\n        super()\n        let dep = this.addScript('https://www.gstatic.com/charts/loader.js')\n    }\n\n    private static init () {\n        google.charts.load('current', {'packages': ['corechart']})\n        ComboChart._isInit = true\n    }\n\n    public get icon (): string {\n        return 'fa-signal'\n    }\n\n    public get label (): string {\n        return 'ComboChart'\n    }\n\n    public get subtext (): string {\n        return 'ComboChart'\n    }\n\n    public get classFullName (): string {\n        return 'google.visualization.ComboChart'\n    }\n\n    public get tutorialFilename (): string {\n        return 'tutorial-google_visualization_ComboChart.html'\n    }\n\n    /**\n     * Make a standard simple html ComboChart.\n     * Available options:\n     * - 'headings'   :  \"true\" / \"false\"  (default: \"true\")\n     * @memberOf ComboChart\n     * @returns {Promise<void>}\n     * @param result\n     */\n    public draw (result: SparqlResultInterface): Promise<any> {\n        let currentChart = this\n        return new Promise(function (resolve, reject) {\n            // transform query\n            // console.log(noCols + \" x \" + noRows)\n\n            let height = 500\n            if (currentChart.height !== '') {\n                height = Tools.decodeFormatSize(currentChart.height)\n            }\n\n            let opt = Object.assign({\n                width: Tools.decodeFormatSize(currentChart.width),\n                height: height\n            }, currentChart.options)\n\n            if (! ComboChart._isInit) {\n                ComboChart.init()\n            }\n\n            google.charts.setOnLoadCallback(\n                () => {\n                    try {\n                        let data = new Data(result)\n                        let comboChart = new google.visualization.ComboChart(document.getElementById(currentChart.container.id))\n                        comboChart.draw(data.getDataTable(), opt)\n                    } catch (error) {\n                        console.log(error)\n                        Logger.displayFeedback(currentChart.container, MESSAGES.ERROR_CHART, [error])\n                        Logger.log(currentChart.container,'Chart finished with error : ' + currentChart.container.id)\n                    }\n                }\n            )\n            // finish\n            return resolve()\n        })\n    }\n}\n","import {\n    Chart, Logger, MESSAGES,\n    SparqlResultInterface\n} from '../../sgvizler'\n\nimport { Tools } from '../Tools'\nimport { Data } from '../Data'\nimport { API } from '../API'\n\ndeclare let google: any\n\n/**\n * Todo ColumnChart\n * @class google.visualization.ColumnChart\n * @tutorial google_visualization_ColumnChart\n * @memberof google.visualization\n */\nexport class ColumnChart extends Chart {\n    private static _isInit: boolean = false\n\n    public constructor () {\n        super()\n        let dep = this.addScript('https://www.gstatic.com/charts/loader.js')\n    }\n\n    private static init () {\n        google.charts.load('current', {'packages': ['corechart', 'bar']})\n        ColumnChart._isInit = true\n    }\n\n    public get icon (): string {\n        return 'fa-bar-chart'\n    }\n\n    public get label (): string {\n        return 'ColumnChart'\n    }\n\n    public get subtext (): string {\n        return 'ColumnChart'\n    }\n\n    public get classFullName (): string {\n        return 'google.visualization.ColumnChart'\n    }\n\n    public get tutorialFilename (): string {\n        return 'tutorial-google_visualization_ColumnChart.html'\n    }\n\n    /**\n     * Make a standard simple html ColumnChart.\n     * Available options:\n     * - 'headings'   :  \"true\" / \"false\"  (default: \"true\")\n     * @memberOf ColumnChart\n     * @returns {Promise<void>}\n     * @param result\n     */\n    public draw (result: SparqlResultInterface): Promise<any> {\n        let currentChart = this\n        return new Promise(function (resolve, reject) {\n            // transform query\n            // console.log(noCols + \" x \" + noRows)\n\n            let height = 500\n            if (currentChart.height !== '') {\n                height = Tools.decodeFormatSize(currentChart.height)\n            }\n\n            let opt = Object.assign({\n                reverseCategories: false,\n                width: Tools.decodeFormatSize(currentChart.width),\n                height: height\n            }, currentChart.options)\n\n            if (! ColumnChart._isInit) {\n                ColumnChart.init()\n            }\n\n            google.charts.setOnLoadCallback(\n                () => {\n                    try {\n                        let data = new Data(result)\n                        let ColumnChart = new google.visualization.ColumnChart(document.getElementById(currentChart.container.id))\n                        ColumnChart.draw(data.getDataTable(), opt)\n                    } catch (error) {\n                        console.log(error)\n                        Logger.displayFeedback(currentChart.container, MESSAGES.ERROR_CHART, [error])\n                        Logger.log(currentChart.container,'Chart finished with error : ' + currentChart.container.id)\n                    }\n                }\n            )\n            // finish\n            return resolve()\n        })\n    }\n}\n","import {\n    Chart,\n    Logger,\n    MESSAGES,\n    Messages,\n    SparqlResultInterface\n} from '../../sgvizler'\n\nimport { Tools } from '../Tools'\nimport { Data } from '../Data'\nimport { API } from '../API'\n\ndeclare let google: any\n\n/**\n * Todo CandlestickChart\n * @class google.visualization.CandlestickChart\n * @tutorial google_visualization_CandlestickChart\n * @memberof google.visualization\n */\nexport class CandlestickChart extends Chart {\n    private static _isInit: boolean = false\n\n    public constructor () {\n        super()\n        let dep = this.addScript('https://www.gstatic.com/charts/loader.js')\n    }\n\n    private static init () {\n        google.charts.load('current', {'packages': ['corechart']})\n        CandlestickChart._isInit = true\n    }\n\n    public get icon (): string {\n        return 'fa-line-chart'\n    }\n\n    public get label (): string {\n        return 'CandlestickChart'\n    }\n\n    public get subtext (): string {\n        return 'CandlestickChart'\n    }\n\n    public get classFullName (): string {\n        return 'google.visualization.CandlestickChart'\n    }\n\n    public get tutorialFilename (): string {\n        return 'tutorial-google_visualization_CandlestickChart.html'\n    }\n\n    /**\n     * Make a standard simple html CandlestickChart.\n     * Available options:\n     * - 'headings'   :  \"true\" / \"false\"  (default: \"true\")\n     * @memberOf CandlestickChart\n     * @returns {Promise<void>}\n     * @param result\n     */\n    public draw (result: SparqlResultInterface): Promise<any> {\n        let currentChart = this\n        return new Promise(function (resolve, reject) {\n            // console.log(noCols + \" x \" + noRows)\n\n            if (result.results.bindings.length === 0 ) {\n                return reject(Messages.get(MESSAGES.ERROR_DATA_NOROW))\n            }\n\n            let height = 500\n            if (currentChart.height !== '') {\n                height = Tools.decodeFormatSize(currentChart.height)\n            }\n\n            let opt = Object.assign({\n                width: Tools.decodeFormatSize(currentChart.width),\n                height: height\n            }, currentChart.options)\n\n            if (! CandlestickChart._isInit) {\n                CandlestickChart.init()\n            }\n\n            google.charts.setOnLoadCallback(\n                () => {\n                    try {\n                        let data = new Data(result)\n                        let candlestickChart = new google.visualization.CandlestickChart(document.getElementById(currentChart.container.id))\n                       candlestickChart.draw(data.getDataTable(), opt)\n                    } catch (error) {\n                        console.log(error)\n                        Logger.displayFeedback(currentChart.container, MESSAGES.ERROR_CHART, [error])\n                        Logger.log(currentChart.container,'Chart finished with error : ' + currentChart.container.id)\n                    }\n                }\n            )\n            // finish\n            return resolve()\n        })\n    }\n}\n","import {\n    Chart, Logger, MESSAGES,\n    SparqlResultInterface\n} from '../../sgvizler'\n\nimport { Tools } from '../Tools'\nimport { Data } from '../Data'\nimport { API } from '../API'\n\ndeclare let google: any\n\n/**\n * Todo Calendar\n * @class google.visualization.Calendar\n * @tutorial google_visualization_Calendar\n * @memberof google.visualization\n */\nexport class Calendar extends Chart {\n    private static _isInit: boolean = false\n\n    public constructor () {\n        super()\n        let dep = this.addScript('https://www.gstatic.com/charts/loader.js')\n    }\n\n    private static init () {\n        google.charts.load('current', {'packages': ['calendar']})\n        Calendar._isInit = true\n    }\n\n    public get icon (): string {\n        return 'fa-calendar'\n    }\n\n    public get label (): string {\n        return 'Calendar'\n    }\n\n    public get subtext (): string {\n        return 'Calendar'\n    }\n\n    public get classFullName (): string {\n        return 'google.visualization.Calendar'\n    }\n\n    public get tutorialFilename (): string {\n        return 'tutorial-google_visualization_Calendar.html'\n    }\n\n    /**\n     * Make a standard simple html Calendar.\n     * Available options:\n     * - 'headings'   :  \"true\" / \"false\"  (default: \"true\")\n     * @memberOf Calendar\n     * @returns {Promise<void>}\n     * @param result\n     */\n    public draw (result: SparqlResultInterface): Promise<any> {\n        let currentChart = this\n        return new Promise(function (resolve, reject) {\n            // transform query\n            // console.log(noCols + \" x \" + noRows)\n\n            let height = 500\n            if (currentChart.height !== '') {\n                height = Tools.decodeFormatSize(currentChart.height)\n            }\n\n            let opt = Object.assign({\n                width: Tools.decodeFormatSize(currentChart.width),\n                height: height\n            }, currentChart.options)\n\n            if (! Calendar._isInit) {\n                Calendar.init()\n            }\n\n            google.charts.setOnLoadCallback(\n                () => {\n                    try {\n                        let data = new Data(result)\n                        let calendar = new google.visualization.Calendar(document.getElementById(currentChart.container.id))\n                       calendar.draw(data.getDataTable(), opt)\n                    } catch (error) {\n                        console.log(error)\n                        Logger.displayFeedback(currentChart.container, MESSAGES.ERROR_CHART, [error])\n                        Logger.log(currentChart.container,'Chart finished with error : ' + currentChart.container.id)\n                    }\n                }\n            )\n            // finish\n            return resolve()\n        })\n    }\n}\n","import {\n    Chart, Logger, MESSAGES,\n    SparqlResultInterface\n} from '../../sgvizler'\n\nimport { Tools } from '../Tools'\nimport { Data } from '../Data'\nimport { API } from '../API'\n\ndeclare let google: any\n\n/**\n * Todo BubbleChart\n * @class google.visualization.BubbleChart\n * @tutorial google_visualization_BubbleChart\n * @memberof google.visualization\n */\nexport class BubbleChart extends Chart {\n    private static _isInit: boolean = false\n\n    public constructor () {\n        super()\n        let dep = this.addScript('https://www.gstatic.com/charts/loader.js')\n    }\n\n    private static init () {\n        google.charts.load('current', {'packages': ['corechart']})\n        BubbleChart._isInit = true\n    }\n\n    public get icon (): string {\n        return 'fa-circle'\n    }\n\n    public get label (): string {\n        return 'BubbleChart'\n    }\n\n    public get subtext (): string {\n        return 'BubbleChart'\n    }\n\n    public get classFullName (): string {\n        return 'google.visualization.BubbleChart'\n    }\n\n    public get tutorialFilename (): string {\n        return 'tutorial-google_visualization_BubbleChart.html'\n    }\n\n    /**\n     * Make a standard simple html bubbleChart.\n     * Available options:\n     * - 'headings'   :  \"true\" / \"false\"  (default: \"true\")\n     * @memberOf BubbleChart\n     * @returns {Promise<void>}\n     * @param result\n     */\n    public draw (result: SparqlResultInterface): Promise<any> {\n        let currentChart = this\n        return new Promise(function (resolve, reject) {\n            // transform query\n            // console.log(noCols + \" x \" + noRows)\n\n            let height = 500\n            if (currentChart.height !== '') {\n                height = Tools.decodeFormatSize(currentChart.height)\n            }\n\n            let opt = Object.assign({\n                width: Tools.decodeFormatSize(currentChart.width),\n                height: height\n            }, currentChart.options)\n\n            if (! BubbleChart._isInit) {\n                BubbleChart.init()\n            }\n\n            google.charts.setOnLoadCallback(\n                () => {\n                    try {\n                        let data = new Data(result)\n                        let chart = new google.visualization.BubbleChart(document.getElementById(currentChart.container.id))\n                         chart.draw(data.getDataTable(), opt)\n                    } catch (error) {\n                        console.log(error)\n                        Logger.displayFeedback(currentChart.container, MESSAGES.ERROR_CHART, [error])\n                        Logger.log(currentChart.container,'Chart finished with error : ' + currentChart.container.id)\n                    }\n                })\n            // finish\n            return resolve()\n        })\n    }\n}\n","import {\n    Chart, Logger, MESSAGES,\n    SparqlResultInterface\n} from '../../sgvizler'\n\nimport { Tools } from '../Tools'\nimport { Data } from '../Data'\nimport { API } from '../API'\n\ndeclare let google: any\n\n/**\n * Todo BarChart\n * @class google.visualization.BarChart\n * @tutorial google_visualization_BarChart\n * @memberof google.visualization\n */\nexport class BarChart extends Chart {\n    private static _isInit: boolean = false\n\n    public constructor () {\n        super()\n        let dep = this.addScript('https://www.gstatic.com/charts/loader.js')\n    }\n\n    private static init () {\n        google.charts.load('current', {'packages': ['corechart', 'bar']})\n        BarChart._isInit = true\n    }\n\n    public get icon (): string {\n        return 'fa-align-left'\n    }\n\n    public get label (): string {\n        return 'BarChart'\n    }\n\n    public get subtext (): string {\n        return 'BarChart'\n    }\n\n    public get classFullName (): string {\n        return 'google.visualization.BarChart'\n    }\n\n    public get tutorialFilename (): string {\n        return 'tutorial-google_visualization_BarChart.html'\n    }\n\n    /**\n     * Make a standard simple html table.\n     * Available options:\n     * - 'headings'   :  \"true\" / \"false\"  (default: \"true\")\n     * @memberOf BarChart\n     * @returns {Promise<void>}\n     * @param result\n     */\n    public draw (result: SparqlResultInterface): Promise<any> {\n        let currentChart = this\n        return new Promise(function (resolve, reject) {\n            // transform query\n            // console.log(noCols + \" x \" + noRows)\n\n            let height = 500\n            if (currentChart.height !== '') {\n                height = Tools.decodeFormatSize(currentChart.height)\n            }\n\n            let opt = Object.assign({\n                width:  Tools.decodeFormatSize(currentChart.width),\n                height: height\n            }, currentChart.options)\n\n            if (! BarChart._isInit) {\n                BarChart.init()\n            }\n\n            google.charts.setOnLoadCallback(\n                () => {\n                    try {\n                        let data = new Data(result)\n                        let chart = new google.visualization.BarChart(document.getElementById(currentChart.container.id))\n                        chart.draw(data.getDataTable(), opt)\n                    } catch (error) {\n                        console.log(error)\n                        Logger.displayFeedback(currentChart.container, MESSAGES.ERROR_CHART, [error])\n                        Logger.log(currentChart.container,'Chart finished with error : ' + currentChart.container.id)\n                    }\n                })\n            // finish\n            return resolve()\n        })\n    }\n}\n","import {\n    Chart, Logger, MESSAGES,\n    SparqlResultInterface\n} from '../../sgvizler'\n\nimport { Tools } from '../Tools'\nimport { Data } from '../Data'\nimport { API } from '../API'\n\ndeclare let google: any\n\n/**\n * Todo AreaChart\n * @class google.visualization.AreaChart\n * @tutorial google_visualization_AreaChart\n * @memberof google.visualization\n */\nexport class AreaChart extends Chart {\n    private static _isInit: boolean = false\n\n    public constructor () {\n        super()\n        let dep = this.addScript('https://www.gstatic.com/charts/loader.js')\n    }\n\n    private static init () {\n        google.charts.load('current', {'packages': ['corechart']})\n        AreaChart._isInit = true\n    }\n\n    public get icon (): string {\n        return 'fa-area-chart'\n    }\n\n    public get label (): string {\n        return 'AreaChart'\n    }\n\n    public get subtext (): string {\n        return 'AreaChart'\n    }\n\n    public get classFullName (): string {\n        return 'google.visualization.AreaChart'\n    }\n\n    public get tutorialFilename (): string {\n        return 'tutorial-google_visualization_AreaChart.html'\n    }\n\n    /**\n     * Make a standard simple html table.\n     * Available options:\n     * - 'headings'   :  \"true\" / \"false\"  (default: \"true\")\n     * @memberOf Table\n     * @returns {Promise<void>}\n     * @param result\n     */\n    public draw (result: SparqlResultInterface): Promise<any> {\n        let currentChart = this\n        return new Promise(function (resolve, reject) {\n            // transform query\n            // console.log(noCols + \" x \" + noRows)\n\n            let height = 500\n            if (currentChart.height !== '') {\n                height = Tools.decodeFormatSize(currentChart.height)\n            }\n\n            let opt = Object.assign({\n                width: Tools.decodeFormatSize(currentChart.width),\n                height: height\n            }, currentChart.options)\n\n            if (! AreaChart._isInit) {\n                AreaChart.init()\n            }\n\n            google.charts.setOnLoadCallback(\n                () => {\n                    try {\n                        let data = new Data(result)\n                        let areaChart = new google.visualization.AreaChart(document.getElementById(currentChart.container.id))\n                        areaChart.draw(data.getDataTable(), opt)\n                    } catch (error) {\n                        console.log(error)\n                        Logger.displayFeedback(currentChart.container, MESSAGES.ERROR_CHART, [error])\n                        Logger.log(currentChart.container,'Chart finished with error : ' + currentChart.container.id)\n                    }\n                }\n            )\n            // finish\n            return resolve()\n        })\n    }\n}\n","import {\n    Chart, Logger, MESSAGES,\n    SparqlResultInterface\n} from '../../sgvizler'\n\nimport { Tools } from '../Tools'\nimport { Data } from '../Data'\nimport { API } from '../API'\n\ndeclare let google: any\n\n/**\n * Todo AnnotationChart\n * @class google.visualization.AnnotationChart\n * @tutorial google_visualization_AnnotationChart\n * @memberof google.visualization\n */\nexport class AnnotationChart extends Chart {\n    private static _isInit: boolean = false\n\n    public constructor () {\n        super()\n        let dep = this.addScript('https://www.gstatic.com/charts/loader.js')\n    }\n\n    private static init () {\n        google.charts.load('current', {'packages': ['annotationchart']})\n        AnnotationChart._isInit = true\n    }\n\n    public get icon (): string {\n        return 'fa-line-chart'\n    }\n\n    public get label (): string {\n        return 'AnnotationChart'\n    }\n\n    public get subtext (): string {\n        return 'AnnotationChart'\n    }\n\n    public get classFullName (): string {\n        return 'google.visualization.AnnotationChart'\n    }\n\n    public get tutorialFilename (): string {\n        return 'tutorial-google_visualization_AnnotationChart.html'\n    }\n\n    /**\n     * Make a standard simple html AnnotationChart.\n     * Available options:\n     * - 'headings'   :  \"true\" / \"false\"  (default: \"true\")\n     * @memberOf AnnotationChart\n     * @returns {Promise<void>}\n     * @param result\n     */\n    public draw (result: SparqlResultInterface): Promise<any> {\n        let currentChart = this\n        return new Promise(function (resolve, reject) {\n            // transform query\n            // console.log(noCols + \" x \" + noRows)\n\n            let height = 500\n            if (currentChart.height !== '') {\n                height = Tools.decodeFormatSize(currentChart.height)\n            }\n\n            let opt = Object.assign({\n                width: Tools.decodeFormatSize(currentChart.width),\n                height: height\n            }, currentChart.options)\n\n            if (! AnnotationChart._isInit) {\n                AnnotationChart.init()\n            }\n\n            google.charts.setOnLoadCallback(\n                () => {\n                    try {\n                        let data = new Data(result)\n                        let AnnotationChart = new google.visualization.AnnotationChart(document.getElementById(currentChart.container.id))\n                        AnnotationChart.draw(data.getDataTable(), opt)\n                    } catch (error) {\n                        console.log(error)\n                        Logger.displayFeedback(currentChart.container, MESSAGES.ERROR_CHART, [error])\n                        Logger.log(currentChart.container,'Chart finished with error : ' + currentChart.container.id)\n                    }\n                }\n            )\n            // finish\n            return resolve()\n        })\n    }\n}\n","import {\n    Logger, MESSAGES,\n    SparqlResultInterface\n} from '../sgvizler'\n\ndeclare let google: any\n\n/**\n * Data\n * @class google.Data\n * @memberof google.Data\n */\nexport class Data {\n\n    private _dataTable: any\n\n    constructor (result: SparqlResultInterface, raw: boolean = false) {\n        if (raw) {\n            this.convertResultRaw (result)\n        } else {\n            this.convertResult (result)\n        }\n    }\n\n    setRole (col: Number, role: string) {\n        this._dataTable.setColumnProperty(col, 'role', role)\n    }\n\n    getDataTable () {\n        return this._dataTable\n    }\n\n    private convertResult (result: SparqlResultInterface) {\n        let data = new google.visualization.DataTable()\n\n        let cols = result.head.vars\n        let rows = result.results.bindings\n        let noCols = cols.length\n        let noRows = rows.length\n\n        for (let col of cols) {\n            // RDF Term\tJSON form\n            // IRI I\t{\"type\": \"uri\", \"value\": \"I\"}\n            // Literal S\t{\"type\": \"literal\",\"value\": \"S\"}\n            // Literal S with language tag L\t{ \"type\": \"literal\", \"value\": \"S\", \"xml:lang\": \"L\"}\n            // Literal S with datatype IRI D\t{ \"type\": \"literal\", \"value\": \"S\", \"datatype\": \"D\"}\n            // Blank node, label B\t{\"type\": \"bnode\", \"value\": \"B\"}\n            let colName = col.replace('_',' ')\n            if ( noRows > 0 ) {\n                let type = rows[0][col] !== undefined ? rows[0][col].datatype : ''\n                if (type === 'http://www.w3.org/2001/XMLSchema#decimal' ||\n                    type === 'http://www.w3.org/2001/XMLSchema#integer') {\n                    data.addColumn('number', colName)\n                } else if (type === 'http://www.w3.org/2001/XMLSchema#boolean') {\n                    data.addColumn('boolean', colName)\n                } else if (type === 'http://www.w3.org/2001/XMLSchema#date') {\n                    data.addColumn('date', colName)\n                } else if (type === 'http://www.w3.org/2001/XMLSchema#dateTime') {\n                    data.addColumn('datetime', colName)\n                } else if (type === 'http://www.w3.org/2001/XMLSchema#time') {\n                    data.addColumn('timeofday', colName)\n                } else {\n                    data.addColumn('string', colName)\n                }\n            } else {\n                data.addColumn('string', colName)\n            }\n        }\n\n        if (noRows > 0) {\n            data.addRows(noRows)\n            let i = 0\n            for (let x = 0; x < noRows; x++) {\n                for (let y = 0; y < noCols; y++) {\n                    // data.setCell(x,y,rows[x][cols[y]].value)\n                    let type = rows[x][cols[y]] !== undefined && rows[x][cols[y]].hasOwnProperty('datatype') ? rows[x][cols[y]].datatype : ''\n                    if (type === 'http://www.w3.org/2001/XMLSchema#integer') {\n                        data.setCell(x, y, parseInt(rows[x][cols[y]].value, 10))\n                    } else if (type === 'http://www.w3.org/2001/XMLSchema#decimal' || type === 'http://www.w3.org/2001/XMLSchema#float') {\n                        data.setCell(x, y, parseFloat(rows[x][cols[y]].value))\n                    } else if (type === 'http://www.w3.org/2001/XMLSchema#boolean') {\n                        // todo test\n                        // 'boolean' - JavaScript boolean value ('true' or 'false'). Example value: v:'true'\n                        data.setCell(x, y, rows[x][cols[y]].value === 'true' ? true : false)\n                    } else if (type === 'http://www.w3.org/2001/XMLSchema#date') {\n                        // todo test\n                        // 'date' - JavaScript Date object (zero-based month), with the time truncated. Example value: v:new Date(2008, 0, 15)\n                        data.setCell(x, y, new Date(rows[x][cols[y]].value))\n                    } else if (type === 'http://www.w3.org/2001/XMLSchema#dateTime') {\n                        // todo test\n                        // 'datetime' - JavaScript Date object including the time. Example value: v:new Date(2008, 0, 15, 14, 30, 45)\n                        data.setCell(x, y, new Date(rows[x][cols[y]].value))\n                    } else if (type === 'http://www.w3.org/2001/XMLSchema#time') {\n                        // todo test\n                        // 'timeofday' - Array of three numbers and an optional fourth, representing hour (0 indicates midnight), minute, second, and optional millisecond. Example values: v:[8, 15, 0], v: [6, 12, 1, 144]\n                        let time: any = new Date(rows[x][cols[y]].value)\n                        data.setCell(x, y, [time.getHours(), time.getHours(), time.getSeconds(), time.getMilliseconds()])\n                    } else {\n                        if (rows[x][cols[y]] === undefined ) {\n                            data.setCell(x, y, null)\n                        } else {\n                            // 'string' - JavaScript string value. Example value: v:'hello'\n                            //let value = rows[x][cols[y]] !== undefined ? rows[x][cols[y]].value : ''\n                            data.setCell(x, y, rows[x][cols[y]].value)\n                        }\n                    }\n                    // console.log('rows['+x+'][cols['+y+']].value = ' + rows[x][cols[y]].value + ' ' +\n                    // rows[x][cols[y]].datatype)\n                }\n            }\n        }\n\n        this._dataTable = data\n    }\n\n    private convertResultRaw (result: SparqlResultInterface) {\n        let data = new google.visualization.DataTable()\n\n        let cols = result.head.vars\n        let rows = result.results.bindings\n        let noCols = cols.length\n        let noRows = rows.length\n\n        for (let col of cols) {\n            data.addColumn('string', col)\n        }\n\n        if (noRows > 0) {\n            data.addRows(noRows)\n            let i = 0\n            for (let x = 0; x < noRows; x++) {\n                for (let y = 0; y < noCols; y++) {\n                    if (rows[x][cols[y]] === undefined ) {\n                        data.setCell(x, y, '')\n                    } else {\n                        data.setCell(x, y, rows[x][cols[y]].value.toString())\n                    }\n                }\n            }\n        }\n\n        this._dataTable = data\n    }\n}\n","/**\n * Tools\n * @class google.Tools\n * @memberof google\n */\nexport class Tools {\n    public static decodeFormatSize (value: any): any {\n        let result = value\n        if (Number.isNaN(Number(value))) {\n            result = result.replace('px', '')\n            if (! Number.isNaN(Number(result))) {\n                result = Number(result)\n            }\n        }\n        return result\n    }\n}\n","/**\n * @namespace bordercloud\n */\nimport * as visualizationNS from './bordercloud/visualization'\nexport const visualization = visualizationNS\n","/**\n * @namespace bordercloud.visualization\n */\n\nexport * from './visualization/DataTable'\n","import {\n    Core,\n    Chart,\n    SparqlResultInterface,\n    MESSAGES,\n    Logger\n} from '../../sgvizler'\n\ndeclare let $: any\n\n/**\n * Enum for tri-state values.\n * @readonly\n * @enum {number}\n */\nenum DATATABLE_COL_OPTIONS {\n    TAG,\n    STYLE\n}\n\n/**\n * This table uses <a href=\"https://datatables.net/\">DataTables.net</a>.\n * You can adapt each column with the option colstyle.\n *\n * @class bordercloud.visualization.DataTable\n * @memberof bordercloud.visualization\n */\nexport class DataTable extends Chart {\n\n    public constructor () {\n        super()\n\n        this.addCss(Core.path + '/lib/DataTables/datatables.min.css')\n        this.addCss(Core.path + '/lib/DataTables/DataTables-1.10.15/css/dataTables.bootstrap4.min.css')\n        let depDatatables = this.addScript(Core.path + '/lib/DataTables/datatables.min.js')\n        this.addScript(Core.path + '/lib/DataTables/Buttons-1.4.0/js/dataTables.buttons.js',depDatatables)\n        this.addScript(Core.path + '/lib/DataTables/DataTables-1.10.15/js/dataTables.bootstrap4.js',depDatatables)\n\n    }\n\n    /**\n     * This function parses colStyle option and build the parameter ColumnDef of DataTable\n     * Example :\n     * \"colStyle=col2_img_max-width:250px;col2_img_border-radius:50%;col2_img_display:block;col2_img_margin:auto;col3_img_max-width:300px;col3_img_max-height:300px;col2_img_opacity:0.5\"\n     *\n     * @param {string} codeStyle\n     * @param {number} noCols\n     * @returns {Array<any>}\n     */\n    private static buildColumnDefs (codeStyle: string,noCols: number): Array<any> {\n        // noinspection Annotator\n        let regex = / *col([1-9]+)\\_([a-zA-Z]+)\\_([^=;\\n]*) */ig\n        let m\n        let datasetColumnsDefs = [] as Array<any>\n        let datasetColumnsFunc\n        let colOptions: string[][] = []\n        let optionCol\n\n        // init\n        for (let c = 0; c < noCols; c++) {\n            colOptions[c] = []\n            colOptions[c][DATATABLE_COL_OPTIONS.TAG] = ''\n            colOptions[c][DATATABLE_COL_OPTIONS.STYLE] = ''\n        }\n\n        // noinspection TsLint\n        while ((m = regex.exec(codeStyle)) !== null) {\n            // This is necessary to avoid infinite loops with zero-width matches\n            if (m.index === regex.lastIndex) {\n                regex.lastIndex++\n            }\n\n            optionCol = parseInt(m[1],10)\n            colOptions[optionCol][DATATABLE_COL_OPTIONS.TAG] = m[2]\n            colOptions[optionCol][DATATABLE_COL_OPTIONS.STYLE] += m[3] + ';'\n        }\n\n        for (let c = 0; c < noCols; c++) {\n            switch (colOptions[c][DATATABLE_COL_OPTIONS.TAG]) {\n                case 'img':\n                    datasetColumnsFunc = this.getFunctionColumnDefImg(colOptions[c][DATATABLE_COL_OPTIONS.STYLE])\n                    break\n                case 'span':\n                    datasetColumnsFunc = this.getFunctionColumnDefSpan(colOptions[c][DATATABLE_COL_OPTIONS.STYLE])\n                    break\n                    /**/\n                case 'video':\n                    datasetColumnsFunc = this.getFunctionColumnDefVideo(colOptions[c][DATATABLE_COL_OPTIONS.STYLE])\n                    break\n                default:\n                    datasetColumnsFunc = this.getFunctionColumnDefDefault()\n            }\n\n            // noinspection TsLint\n            datasetColumnsDefs[c] = {\n                'targets': c,\n                // \"data\": \"description\",\n                'render': datasetColumnsFunc\n            }\n        }\n        return datasetColumnsDefs\n    }\n\n    private static getFunctionColumnDefDefault (): any {\n        return (function (data: any, type: any, full: any, meta: any) {\n            return data\n        })\n    }\n    private static getFunctionColumnDefImg (style: string): any {\n        return (function (data: any, type: any, full: any, meta: any) {\n            return '<img src=\"' + data + '\"  style=\"' + style + '\"\\>'\n        })\n    }\n\n    private static getFunctionColumnDefVideo (style: string): any {\n        return (function (data: any, type: any, full: any, meta: any) {\n            let youtubePattern = new RegExp('youtu')\n            let facebookPattern = new RegExp('facebook')\n            let mediawikiPattern = new RegExp('commons\\.wikimedia\\.org')\n\n            if (youtubePattern.test(data)) {\n                let url = data.replace('watch?v=', 'embed/')\n                return '<iframe  style=\"' + style + '\" src=\"' + url + '\" meta http-equiv=\"X-Frame-Options\" content=\"allow\" frameborder=\"0\" allowfullscreen></iframe>'\n            } else if (facebookPattern.test(data)) {\n                //data = 'https://www.facebook.com/XXXX/videos/XXXXX/' // example\n                //doc https://developers.facebook.com/docs/plugins/embedded-video-player\n                return '<iframe src=\"https://www.facebook.com/plugins/video.php?href=' + encodeURIComponent(data) + '&show_text=0&width=560\" style=\"border:none;overflow:hidden;' + style + '\" scrolling=\"no\" frameborder=\"0\" allowTransparency=\"true\" allowFullScreen=\"true\"></iframe>'\n            } else if (mediawikiPattern.test(data)) {\n                //data = 'https://commons.wikimedia.org/wiki/File%3AAuguste_%26_Louis_Lumi%C3%A8re-_L'Arroseur_arros%C3%A9_(1895).webm' // example\n                //return '<iframe src=\"' + data + '?embedplayer=false\" style=\"' + style + '\" frameborder=\"0\" allowfullscreen></iframe>'\n                //doc http://html5video.org/wiki/Rewriting_HTML5_Media_Elements\n                return '<video controls style=\"' + style + '\"><source src=\"' + data + '\"></video>'\n            } else {\n                return '<iframe  style=\"' + style + '\" src=\"' + data + '\" meta http-equiv=\"X-Frame-Options\" content=\"allow\" frameborder=\"0\" allowfullscreen></iframe>'\n            }\n        })\n    }\n\n    private static getFunctionColumnDefSpan (style: string): any {\n        return (function (data: any, type: any, full: any, meta: any) {\n            return '<span style=\"' + style + '\"\\>' + data + '</span>'\n        })\n    }\n\n    public get icon (): string {\n        return 'fa-table'\n    }\n\n    public get label (): string {\n        return 'DataTable'\n    }\n\n    public get subtext (): string {\n        return 'DataTable'\n    }\n\n    public get classFullName (): string {\n        return 'bordercloud.visualization.DataTable'\n    }\n\n    public get tutorialFilename (): string {\n        return 'tutorial-bordercloud_visualization_DataTable.html'\n    }\n\n    /**\n     * Draw a chart\n     * Available options:\n     * - 'class' :  css class (default: \"table table-striped table-bordered\")\n     * - 'cellspacing'   : cellspacing of table  (default: \"0\")\n     * - 'width'   :  width (default: \"100%\")\n     * - 'colStyle'   :   (default: \"\")\n     *\n     * Example :\n     * \"colStyle=col2_img_max-width:250px;col2_img_border-radius:50%;col2_img_display:block;col2_img_margin:auto;col3_img_max-width:300px;col3_img_max-height:300px;col2_img_opacity:0.5\"\n     *\n     * @param {SparqlResultInterface} result\n     * @returns {Promise< any >}\n     */\n     public draw (result: SparqlResultInterface): Promise<any> {\n        let currentChart = this\n        return new Promise(function (resolve, reject) {\n            // precondition\n            let obj = document.getElementById(currentChart.container.id)\n            if (! obj) {\n                Logger.displayFeedback(currentChart.container, MESSAGES.ERROR_CHART_UNKNOWN, [currentChart.container.id])\n                return resolve()\n            }\n\n            try {\n\n                let cols = result.head.vars\n                let rows = result.results.bindings\n                let row\n                let datasetRow\n                let noCols = cols.length\n                let noRows = rows.length\n                let idChart = currentChart.container.id + '-datatable'\n                let datasetColumns = []\n                let datasetColumnsDefs\n                let dataset = []\n                let tableElement = document.createElement('table')\n                let tableId = document.createAttribute('id')\n                let tableClass = document.createAttribute('class')\n                let tableCellSpacing = document.createAttribute('cellspacing')\n                let tableWidth = document.createAttribute('width')\n                let opt = Object.assign({\n                    'class'         : 'table table-striped table-bordered' ,\n                    'cellspacing'   : '0' ,\n                    'width'         : '100%' ,\n                    'colstyle'      : undefined\n                }, currentChart.options )\n\n                for (let c = 0; c < noCols; c++) {\n                    datasetColumns[c] = { title: cols[c] }\n                }\n\n                if (opt.colstyle !== undefined ) {\n                    datasetColumnsDefs = DataTable.buildColumnDefs(opt.colstyle,noCols)\n                }\n\n                for (let r = 0; r < noRows; r++) {\n                    row = rows[r]\n                    datasetRow = []\n                    // loop cells\n                    for (let c = 0; c < noCols; c += 1) {\n                        datasetRow[c] = row[cols[c]] !== undefined ? row[cols[c]].value : ''\n                    }\n                    dataset[r] = datasetRow\n                }\n                tableId.value = idChart\n                tableClass.value = opt.class\n                tableCellSpacing.value = opt.cellspacing\n                tableWidth.value = opt.width\n                tableElement.setAttributeNode(tableId)\n                tableElement.setAttributeNode(tableClass)\n                tableElement.setAttributeNode(tableCellSpacing)\n                tableElement.setAttributeNode(tableWidth)\n\n                obj.appendChild(tableElement)\n\n                $( '#' + idChart).DataTable( {\n                    bSort : false,\n                    data: dataset ,\n                    columns: datasetColumns,\n                    columnDefs: datasetColumnsDefs,\n                    dom: 'Bfrtip',\n                    buttons: [\n                        'csv',\n                        'pdf',\n                        'print'\n                    ]\n\n                } )\n            }catch (e) {\n                return reject(e)\n            }\n            // finish\n            return resolve()\n        })\n     }\n}\n","/**\n * @namespace sgvizler\n */\nimport * as visualizationNS from './sgvizler/visualization'\nexport const visualization = visualizationNS\n\n// Class\n\nexport * from './sgvizler/Loader'\nexport * from './sgvizler/Dependency'\nexport * from './sgvizler/SparqlResultInterface.d'\nexport * from './sgvizler/SparqlError'\nexport * from './sgvizler/Select'\nexport * from './sgvizler/Messages'\nexport * from './sgvizler/Tools'\nexport * from './sgvizler/Logger'\nexport * from './sgvizler/Core'\nexport * from './sgvizler/Chart'\nexport * from './sgvizler/SparqlTools'\nexport * from './sgvizler/Request'\nexport * from './sgvizler/Container'\n","import {\n    Chart,\n    Request,\n    Tools,\n    Logger,\n    MESSAGES,\n    SparqlTools,\n    SparqlResultInterface\n} from '../sgvizler'\n\ndeclare let $: any\n\n/**\n *\n * @class sgvizler.\n * @memberof sgvizler\n */\nexport enum CONTAINER_STATE {\n    FAILED,\n    LOADED,\n    LOADING\n}\n\n/**\n * Draws charts specified in HTML containers, here we call them\n * \"sgvizler-containers\".\n *\n * Example of use: The following sgvizler-container will be\n * selected by sgvizler due to the use of designated\n * attributes. The result is a pie chart (draw with\n * `google.visualization.PieChart`) showing the number of instance\n * per class in the endpoint at\n * `http://sws.ifi.uio.no/sparql/ndp`.\n *\n *     <div id=\"ex1\"\n *          data-sgvizler-endpoint=\"http://sws.ifi.uio.no/sparql/npd\"\n *          data-sgvizler-query=\"SELECT ?class (count(?instance) AS ?noOfInstances)\n *                               WHERE{ ?instance a ?class }\n *                               GROUP BY ?class\n *                               ORDER BY ?class\"\n *          data-sgvizler-chart=\"google.visualization.PieChart\"\n *          style=\"width:800px; height:400px;\"></div>\n *\n * These container must have an id attribute (or else sgvizler\n * will not know where to put the chart) and a query attribute (or\n * else the container will be ignored by sgvizler).\n *\n * Dependencies:\n *\n *  - sgvizler.util\n *  - sgvizler.loader\n *  - sgvizler.logger\n *  - sgvizler.Query\n *  - jQuery\n * @class sgvizler.Container\n * @memberof sgvizler\n */\nexport class Container {\n\n    private static readonly PREFIX: string = 'data-sgvizler-'\n    private static readonly QUERY_ATTRIBUTE_NAME: string = Container.PREFIX + 'query'\n    private static readonly ENDPOINT_ATTRIBUTE_NAME: string = Container.PREFIX + 'endpoint'\n    private static readonly OUTPUT_FORMAT_ATTRIBUTE_NAME: string = Container.PREFIX + 'endpoint-output-format'\n    private static readonly QUERY_PARAMETER_ATTRIBUTE_NAME: string = Container.PREFIX + 'endpoint-query-parameter'\n    private static readonly OUTPUT_METHOD_ATTRIBUTE_NAME: string = Container.PREFIX + 'endpoint-method'\n    private static readonly CHART_ATTRIBUTE_NAME: string = Container.PREFIX + 'chart'\n    private static readonly CHART_OPTION_ATTRIBUTE_NAME: string = Container.PREFIX + 'chart-options'\n    private static readonly LOG_LEVEL_ATTRIBUTE_NAME: string = Container.PREFIX + 'log'\n\n    private _chart: Chart\n    private _chartOptions: string = ''\n    private _chartName: string = ''\n    private _loglevel: number = 0\n    private _id: string = ''\n    private _request: Request\n    private _state: CONTAINER_STATE\n\n    /**\n     * Collects values designated for sgvizler in the given.\n     * See also property PREFIX.\n     * @param {string} elementID The ID for which the attributes should be collected.\n     */\n    constructor (elementID: string) {\n        // step 1 : read parameters and create the object Query\n        // pre-condition\n        let element = document.getElementById(elementID)\n        if (element === null) {\n            throw new Error('elementID unknown : ' + elementID)\n        }\n\n        let self = Container\n        this._state = CONTAINER_STATE.LOADING\n\n        let elmAttrs = element.attributes\n\n        // read basic parameters\n        if (elmAttrs[self.LOG_LEVEL_ATTRIBUTE_NAME as any]) {\n            this._loglevel = parseInt(elmAttrs[self.LOG_LEVEL_ATTRIBUTE_NAME as any].value,10)\n        }\n\n        if (elmAttrs[self.CHART_ATTRIBUTE_NAME as any]) {\n            this._chartName = elmAttrs[self.CHART_ATTRIBUTE_NAME as any].value\n\n            // This code will disappear but it's necessary for the migration with the old Sgvizler\n            switch (this._chartName) {\n                case 'google.visualization.AnnotatedTimeLine' :\n                case 'google.visualization.Gauge' :\n                case 'google.visualization.ImageSparkLine' :\n                case 'google.visualization.MotionChart' :\n                case 'sgvizler.visualization.D3ForceGraph' :\n                case 'sgvizler.visualization.DefList\"' :\n                case 'sgvizler.visualization.DraculaGraph' :\n                case 'sgvizler.visualization.List' :\n                case 'sgvizler.visualization.Text' :\n                case 'sgvizler.visualization.MapWKT' :\n                {\n                    console.warn('Sgvizler2 : ' + this._chartName + ' is deprecated. Please choose another chart.')\n                    this._chartName = 'bordercloud.visualization.DataTable'\n                    break\n                }\n                case 'sgvizler.visualization.Map' :\n                {\n                    console.warn('Sgvizler2 : ' + this._chartName + ' is obsolete. Please choose leaflet.visualization.Map or another chart.')\n                    this._chartName = 'leaflet.visualization.Map'\n                    break\n                }\n                case 'google.visualization.GeoMap' :\n                {\n                    console.warn('Sgvizler2 : ' + this._chartName + ' is obsolete. Please choose google.visualization.Map or another chart.')\n                    this._chartName = 'google.visualization.Map'\n                    break\n                }\n                case 'google.visualization.PieChart' :\n                {\n                    console.warn('Sgvizler2 : ' + this._chartName + ' is obsolete. Please choose google.visualization.Pie or another chart.')\n                    this._chartName = 'google.visualization.Pie'\n                    break\n                }\n            }\n        }\n\n        if (elmAttrs[self.CHART_OPTION_ATTRIBUTE_NAME as any]) {\n            this._chartOptions =\n                Tools.decodeHtml(elmAttrs[self.CHART_OPTION_ATTRIBUTE_NAME as any].value)\n        }\n\n        // build request object\n        let request = new Request()\n        request.container = this\n\n        this._id = elementID\n\n        if (elmAttrs[self.QUERY_ATTRIBUTE_NAME as any]) {\n            request.query = Tools.decodeHtml(elmAttrs[self.QUERY_ATTRIBUTE_NAME as any].value)\n        }\n\n        if (elmAttrs[self.ENDPOINT_ATTRIBUTE_NAME as any]) {\n            request.endpoint = Tools.decodeHtml(elmAttrs[self.ENDPOINT_ATTRIBUTE_NAME as any].value)\n        } else {\n            this._state = CONTAINER_STATE.FAILED\n            Logger.displayFeedback(this, MESSAGES.ERROR_ENDPOINT_FORGOT)\n            return\n        }\n\n        if (elmAttrs[self.OUTPUT_FORMAT_ATTRIBUTE_NAME as any]) {\n            request.endpointOutputFormat = SparqlTools.convertString(elmAttrs[self.OUTPUT_FORMAT_ATTRIBUTE_NAME as any].value)\n        }\n\n        if (elmAttrs[self.OUTPUT_METHOD_ATTRIBUTE_NAME as any]) {\n            request.method = elmAttrs[self.OUTPUT_METHOD_ATTRIBUTE_NAME as any].value\n        }\n\n        if (elmAttrs[self.QUERY_PARAMETER_ATTRIBUTE_NAME as any]) {\n            request.queryParameter = elmAttrs[self.QUERY_PARAMETER_ATTRIBUTE_NAME as any].value\n        }\n\n        this._request = request\n\n        // build the chart object\n        let chart = Tools.getObjectByPath(this.chartName)\n        if (chart === undefined) {\n            this._state = CONTAINER_STATE.FAILED\n            Logger.displayFeedback(this, MESSAGES.ERROR_CHART_UNKNOWN, [this.chartName])\n        } else {\n            chart.container = this\n            // read with and height of container before chart options\n            try {\n                let element = $('#' + elementID)\n                let widthCss = element.css('width')\n                let heightCss = element.css('height')\n                if (widthCss !== null) {\n                    chart.width = widthCss\n                }\n                if (heightCss !== null && heightCss !== '0px') {\n                    chart.height = heightCss\n                }\n            } catch (e) {\n                // do nothing, unit test not support jquery\n            }\n            // read options (and replace may be with and height)\n            chart.optionsRaw = this._chartOptions\n\n            this._chart = chart\n        }\n    }\n\n    /**\n     * Draws the sgvizler-containers with the given element id.\n     * @method containerDraw\n     * @param {string} elementID\n     * @param options\n     * @returns {Promise<void>}\n     */\n    public static async drawWithElementId (elementID: string, options?: any) {\n        let container = new Container(elementID)\n        // console.log(container)\n        Logger.log(container,'drawing id: ' + elementID)\n        await container.draw()\n    }\n\n    // noinspection JSValidateJSDoc\n    /**\n     * Draws all sgvizler-containers on page.\n     * @returns {Promise<any>}\n     */\n    public static drawAll (): Promise<any> {\n        let promisesArray: Array<any> = []\n        let ids: Array<string> = []\n\n        let iterator = document.evaluate('//div[@' + Container.PREFIX + 'query]/@id',\n            document, null, XPathResult.ANY_TYPE, null)\n        let thisNode = iterator.iterateNext() as Attr\n\n        while (thisNode) {\n            ids.push(thisNode.value)\n            thisNode = iterator.iterateNext() as Attr\n        }\n\n        for (let id of ids) {\n            promisesArray.push(Container.drawWithElementId(id))\n        }\n        return Promise.all(promisesArray)\n    }\n\n    public static async loadDependenciesId (elementID: string, options?: any) {\n        let container = new Container(elementID)\n        // console.log(container)\n        Logger.log(container,'Load dependencies id: ' + elementID)\n        await container.loadDependencies()\n    }\n\n    public static loadAllDependencies (): Promise<any> {\n        let promisesArray: Array<any> = []\n        let ids: Array<string> = []\n\n        let iterator = document.evaluate('//div[@' + Container.PREFIX + 'query]/@id',\n            document, null, XPathResult.ANY_TYPE, null)\n        let thisNode = iterator.iterateNext() as Attr\n\n        while (thisNode) {\n            ids.push(thisNode.value)\n            thisNode = iterator.iterateNext() as Attr\n        }\n\n        for (let id of ids) {\n            promisesArray.push(Container.loadDependenciesId(id))\n        }\n        return Promise.all(promisesArray)\n    }\n\n    /**\n     *\n     * @param {string} elementID\n     * @param {string} endpoint\n     * @param {string} query\n     * @param {string} chartName\n     * @param {string} options\n     * @param {string} loglevel\n     * @returns {string}\n     */\n    public static create (\n        elementID: string,\n        endpoint: string,\n        query: string,\n        chartName: string,\n        options?: string,\n        loglevel?: string,\n        output?: string,\n        method?: string,\n        parameter?: string\n    ) {\n        let element = document.getElementById(elementID)\n        if (element === null) {\n            throw new Error('elementID unknown : ' + elementID)\n        }\n\n        let self = Container\n        let attrQuery = document.createAttribute(self.QUERY_ATTRIBUTE_NAME)\n        let attrEndpoint = document.createAttribute(self.ENDPOINT_ATTRIBUTE_NAME)\n        let attrChart = document.createAttribute(self.CHART_ATTRIBUTE_NAME)\n\n        // attrQuery.value = Tools.escapeHtml(query)\n        attrQuery.value = query\n        attrEndpoint.value = endpoint\n        attrChart.value = chartName\n\n        element.setAttributeNode(attrQuery)\n        element.setAttributeNode(attrEndpoint)\n        element.setAttributeNode(attrChart)\n\n        if (options) {\n            let attrOptions = document.createAttribute(self.CHART_OPTION_ATTRIBUTE_NAME)\n            attrOptions.value = options\n            element.setAttributeNode(attrOptions)\n        }\n        if (loglevel) {\n            let attrLevel = document.createAttribute(self.LOG_LEVEL_ATTRIBUTE_NAME)\n            attrLevel.value = loglevel\n            element.setAttributeNode(attrLevel)\n        }\n        if (output) {\n            let attrOutput = document.createAttribute(self.OUTPUT_FORMAT_ATTRIBUTE_NAME)\n            attrOutput.value = output\n            element.setAttributeNode(attrOutput)\n        }\n        if (method) {\n            let attrMethod = document.createAttribute(self.OUTPUT_METHOD_ATTRIBUTE_NAME)\n            attrMethod.value = method\n            element.setAttributeNode(attrMethod)\n        }\n        if (parameter) {\n            let attrQueryAttribut = document.createAttribute(self.QUERY_PARAMETER_ATTRIBUTE_NAME)\n            attrQueryAttribut.value = parameter\n            element.setAttributeNode(attrQueryAttribut)\n        }\n\n        return element.innerHTML\n    }\n\n    /**\n     *\n     * @returns {string}\n     */\n    get id (): string {\n        return this._id\n    }\n\n    /**\n     * Get the name of chart object.\n     * @returns {string}\n     */\n    get chartName (): string {\n        return this._chartName\n    }\n\n    ///////////////////////////////////// OPTIONS\n\n    /**\n     *\n     * @returns {string}\n     */\n    get chartOptions (): string {\n        return this._chartOptions\n    }\n\n    /**\n     *\n     * @returns {Chart}\n     */\n    get chart (): Chart {\n        return this._chart\n    }\n\n    /**\n     *\n     * @returns {Request}\n     */\n    get request (): Request {\n        return this._request\n    }\n\n    /**\n     *\n     * @returns {number}\n     */\n    get loglevel (): number {\n        return this._loglevel\n    }\n\n    /**\n     *\n     * @returns {Promise<void>}\n     */\n    public async draw () {\n        let sparqlResult\n\n        if (this._state === CONTAINER_STATE.FAILED) {\n            return\n        }\n\n        try {\n            sparqlResult = await this.request.sendRequest()\n            // console.log(queryResult)\n        } catch (error) {\n            console.log(error)\n            Logger.displayFeedback(this, MESSAGES.ERROR_REQUEST, [error])\n            this._state = CONTAINER_STATE.FAILED\n        }\n\n        if (this._state === CONTAINER_STATE.FAILED) {\n            return\n        }\n\n        let sparqlResultI = sparqlResult as SparqlResultInterface\n        if (sparqlResultI.head === undefined) {\n            console.log(sparqlResultI)\n            Logger.displayFeedback(this, MESSAGES.ERROR_CHART, ['ERROR_head_undefined'])\n            this._state = CONTAINER_STATE.FAILED\n        }\n\n        try {\n            this._chart.loadDependenciesAndDraw(sparqlResultI)\n        } catch (error) {\n            console.log(error)\n            Logger.displayFeedback(this, MESSAGES.ERROR_CHART, [error])\n            this._state = CONTAINER_STATE.FAILED\n        }\n    }\n\n    public async loadDependencies () {\n        try {\n            await this._chart.loadDependencies()\n        } catch (error) {\n            console.log(error)\n            Logger.displayFeedback(this, MESSAGES.ERROR_DEPENDENCIES, [error])\n            this._state = CONTAINER_STATE.FAILED\n        }\n    }\n}\n","import {\n    Container,\n    SPARQL_RESULT,\n    SparqlTools\n} from '../sgvizler'\nimport { SparqlError } from './SparqlError'\n\n/**\n * Important class. Runs SPARQL query against SPARQL\n * endpoints.\n *\n * Dependencies:\n *\n *   - sgvizler.util\n *   - sgvizler.namespace\n *   - sgvizler.registry\n *   - sgvizler.parser\n *   - sgvizler.loader\n *   - sgvizler.logger\n *   - sgvizler.defaults\n *   - jQuery\n *   - google.visualization\n *\n *\n * Example of how to use the Query class:\n *\n *     var sparqlQueryString = \"SELECT * {?s ?p ?o} LIMIT 10\",\n *         containerID = \"myElementID\",\n *         Q = new sgvizler.Query();\n *\n *     // Note that default values may be set in the sgvizler object.\n *     Q.query(sparqlQueryString)\n *         .endpointURL(\"http://dbpedia.org/sparql\")\n *         .endpointOutputFormat(\"json\")                    // Possible values 'xml', 'json', 'jsonp'.\n *         .chartFunction(\"google.visualization.BarChart\")  // The name of the function to draw the chart.\n *         .draw(containerID);                              // Draw the chart in the designated HTML element.\n *\n * @class sgvizler.Request\n * @memberof sgvizler\n */\nexport class Request {\n    public listeners: any\n    public sparqlResult: any\n\n    private _query: string = ''\n    private _endpoint: string = ''\n    private _endpointOutputFormat: SPARQL_RESULT = SPARQL_RESULT.json\n    private _method = 'GET'\n    private _container: Container\n    private _queryParameter: string = 'query'\n    // private _endpointResultsUrlPart: string\n    // // private _chartPathFunction: string\n    // private _endpointURL: string\n\n    /**\n     *\n     * @returns {string}\n     */\n    get method (): string {\n        return this._method\n    }\n\n    /**\n     *\n     * @param {string} value\n     */\n    set method (value: string) {\n        this._method = value\n    }\n\n    /**\n     *\n     * @returns {Container}\n     */\n    get container (): Container {\n        return this._container\n    }\n\n    /**\n     *\n     * @param {Container} value\n     */\n    set container (value: Container) {\n        this._container = value\n    }\n\n    /**\n     * Get query string.\n     * @method query\n     * @public\n     * @return {string}\n     */\n    get query (): string {\n        return this._query\n    }\n\n    /**\n     * Set query string.\n     * @method query\n     * @public\n     * @chainable\n     * @param value\n     */\n    set query (value: string) {\n        this._query = value\n    }\n\n    /**\n     * Get endpoint URL.\n     * @method endpointURL\n     * @public\n     * @return {string}\n     */\n    get endpoint (): string {\n        return this._endpoint\n    }\n\n    /**\n     * Set endpoint URL.\n     * @method endpointURL\n     * @public\n     * @chainable\n     * @example\n     *     sgvizler.endpointURL('http://sparql.dbpedia.org');\n     *   sets this Query object's endpoint to DBpedia.\n     * @param value\n     */\n    set endpoint (value: string) {\n        this._endpoint = value\n    }\n\n    /**\n     * Get endpoint output format.\n     * @method endpointOutputFormat\n     * @public\n     * @return {string}\n     */\n    get endpointOutputFormat (): SPARQL_RESULT {\n        return this._endpointOutputFormat\n    }\n\n    /**\n     * Set endpoint output format. Legal values are `'xml'`,\n     * `'json'`, `'jsonp'`.\n     * @method endpointOutputFormat\n     * @public\n     * @chainable\n     * @param value\n     */\n    set endpointOutputFormat (value: SPARQL_RESULT) {\n        this._endpointOutputFormat = value\n    }\n\n    /**\n     * todo\n     * @returns {string}\n     */\n    get queryParameter (): string {\n        return this._queryParameter\n    }\n\n    /**\n     * todo\n     * @param {string} value\n     */\n    set queryParameter (value: string) {\n        this._queryParameter = value\n    }\n\n    public constructor () {\n        this.listeners = {}\n    }\n\n    public sendRequest () {\n        let myRequest = this\n        // Create new promise with the Promise() constructor;\n        // This has as its argument a function\n        // with two parameters, resolve and reject\n        return new Promise(function (resolve, reject) {\n            // Standard XHR to load an image\n            let xhr = new XMLHttpRequest()\n            let data\n            let url = myRequest.endpoint\n\n            if (myRequest.method.toLowerCase() === 'get') {\n                url += '?' + myRequest.queryParameter + '=' + encodeURIComponent(myRequest.query) +\n                        '&output=' + SparqlTools.getOutputLabel(myRequest.endpointOutputFormat)\n            } else {\n                data = myRequest.queryParameter + '=' + encodeURIComponent(myRequest.query)\n            }\n\n            xhr.open(myRequest.method,url,true)\n            xhr.setRequestHeader('Accept', SparqlTools.getHeaderAccept(myRequest.endpointOutputFormat))\n            // hide errors xhr.responseType = SparqlTools.getXMLHttpRequestResponseType(myRequest.endpointOutputFormat)\n\n            // TODO check progress\n            xhr.onprogress = function (oEvent) {\n                if (oEvent.lengthComputable) {\n                    let percentComplete = (oEvent.loaded / oEvent.total) * 100\n                    console.log('onprogress' + percentComplete)\n                } else {\n                    // Impossible de calculer la progression puisque la taille totale est inconnue\n                }\n            }\n\n            // When the request loads, check whether it was successful\n            xhr.onload = function (options: any) {\n                if (xhr.readyState === XMLHttpRequest.DONE) {\n                    if (xhr.status === 200) {\n                        // If successful, resolve the promise by passing back the request response\n                        resolve(JSON.parse(xhr.response))\n                    } else {\n                        // If it fails, reject the promise with a error message\n                        reject(SparqlError.getErrorMessageWithStatus200(xhr))\n                    }\n                }\n            }\n            xhr.onerror = () => reject(SparqlError.getErrorWithOtherStatus(xhr,url))\n\n            // Send the request\n            if (data) {\n                xhr.setRequestHeader('content-type', 'application/x-www-form-urlencoded')\n                xhr.send(data)\n            } else {\n                xhr.send()\n            }\n            // console.log(myRequest.query)\n        })\n    }\n}\n","/**\n *\n * @class sgvizler.SPARQL_RESULT\n * @memberof sgvizler\n */\nexport enum SPARQL_RESULT {\n    xml,\n    json,\n    jsonp\n}\n\n/**\n *\n * @class sgvizler.SparqlTools\n * @memberof gvizler\n */\nexport class SparqlTools {\n\n    public static getOutputLabel (id: SPARQL_RESULT) {\n        let str: string = ''\n        switch (id) {\n            case SPARQL_RESULT.xml :\n                str = 'xml'\n                break\n            case SPARQL_RESULT.json :\n                str = 'json'\n                break\n            case SPARQL_RESULT.jsonp :\n                str = 'jsonp'\n                break\n        }\n        return str\n    }\n\n    public static getXMLHttpRequestResponseType (id: SPARQL_RESULT): XMLHttpRequestResponseType {\n        let type: string = ''\n        switch (id) {\n            case SPARQL_RESULT.xml :\n                type = '' // \tDOMString (this is the default value for xhr)\n                break\n            case SPARQL_RESULT.json :\n            case SPARQL_RESULT.jsonp :\n                type = 'json'\n                break\n        }\n        return type as XMLHttpRequestResponseType\n    }\n\n    public static getHeaderAccept (id: SPARQL_RESULT) {\n        let str: string = ''\n        switch (id) {\n            case SPARQL_RESULT.xml :\n                str = 'application/sparql-results+xml'\n                break\n            case SPARQL_RESULT.json :\n            case SPARQL_RESULT.jsonp :\n                str = 'application/sparql-results+json'\n                break\n        }\n        return str\n    }\n\n    public static convertString (label: string ): SPARQL_RESULT {\n        let result: SPARQL_RESULT = SPARQL_RESULT.json\n        switch (label) {\n            case 'xml' :\n                result = SPARQL_RESULT.xml\n                break\n            case 'json' :\n                result = SPARQL_RESULT.json\n                break\n            case 'jsonp' :\n                result = SPARQL_RESULT.jsonp\n                break\n        }\n        return result\n    }\n}\n","/**\n *\n * @class sgvizler.Core\n * @memberof sgvizler\n */\nexport class Core {\n\n    /**\n     * todo\n     * @returns {string}\n     */\n    static get path (): string {\n        return this._path\n    }\n\n    /**\n     * todo\n     * @param {string} value\n     */\n    static set path (value: string) {\n        this._path = value\n    }\n\n    /**\n     * The version number of this sgvizler2.\n     * @static\n     * @readonly\n     * @type {string} VERSION\n     */\n    public static readonly VERSION: string = '0.0'\n\n    /**\n     * sgvizler2's homepage.\n     * @static\n     * @readonly\n     * @type {string} HOMEPAGE\n     */\n    public static readonly HOMEPAGE: string = 'https://bordercloud.github.io/sgvizler2/index.html'\n\n    /**\n     * sgvizler2's docs path\n     * @static\n     * @readonly\n     * @type {string} DOCPATH\n     */\n    public static readonly DOCPATH: string = 'https://bordercloud.github.io/sgvizler2/'\n\n    private static _path: string = ''\n\n}\n","import * as S from '../sgvizler'\n\n/**\n * Handles all logging, either to console or designated HTML\n * container.\n *\n * @class sgvizler.Logger\n * @memberof sgvizler\n */\nexport class Logger {\n    /**\n     * The timestamp for the load start of the current running\n     * version of sgvizler. Used to calculate time elapse of\n     * future events.\n     */\n    private static _startTime = Date.now()\n\n    /**\n     * Logs a message.\n     * @method log\n     * @protected\n     * @param {string} message The message to log.\n     */\n    public static log (container: S.Container, message: string) {\n        if (container.loglevel === 2) {\n            console.log(this.elapsedTime() + 's: ' + message)\n        }\n    }\n\n    public static logSimple (message: string) {\n        console.log(this.elapsedTime() + 's: ' + message)\n    }\n\n    /**\n     * Todo\n     * @param {Container} container\n     * @param {MESSAGES} messageName\n     * @param {Array<string>} args\n     */\n    public static displayFeedback (container: S.Container, messageName: S.MESSAGES, args?: Array<string>) {\n        let message = S.Messages.get(messageName,args)\n\n        if (container.loglevel === 2) {\n            if (message) {\n                let obj = document.getElementById(container.id)\n                if (obj) {\n                    obj.innerHTML = \"<p style='color:red'>\" + message + '</p>'\n                }\n            }\n        }\n    }\n\n    /**\n     * @method timeElapsed\n     * @private\n     * @return {number} The number of seconds elapsed since\n     * this sgvizler got loaded.\n     */\n    private static elapsedTime (): number {\n        return (Date.now() - this._startTime) / 1000\n    }\n}\n","import * as sgvizler2 from '../index'\n\n/**\n * Todo comment\n * @class sgvizler.Tools\n * @memberof sgvizler\n */\nexport class Tools {\n\n    // noinspection JSValidateJSDoc\n    /**\n     * Gets the object located at `path` from `object`. `path`\n     * is given in dot notation.\n     * Search in first in the library and after in window object\n     * @param {string} path\n     * @param object\n     * @returns { any }  or undefined\n     */\n    public static getObjectByPath (path: string, object?: any): any {\n        let i\n        let len\n        let segments = path.split('.')\n        let cursor = object || sgvizler2  // search in the lib if object is empty\n\n        for (i = 0, len = segments.length; i < len; i += 1) {\n            if (cursor === undefined) {                             // create new child element.\n               break\n            }\n            if (i < len - 1) {\n                cursor = cursor[segments[i]]     // if cursor is undefined, it remains undefined.\n            } else {\n                try {\n                    cursor = new cursor[segments[i]]() // create an instance\n                } catch (e) {\n                    // do nothing\n                    // cursor[segments[i]]() is not a constructor]\n                    cursor = undefined\n                }\n            }\n        }\n\n        if (cursor === undefined && ! object) {// window is the global scope.\n            cursor = this.getObjectByPath(path, window)\n        }\n        return cursor\n    }\n\n    public static assignProperty (obj: any, path: string, value: any): any {\n        return Tools.assignJSON(obj,Tools.getJSONByPath(path,value))\n    }\n\n    // public static escapeHtml (str: string): string {\n    //     let text = document.createTextNode(str)\n    //     let div = document.createElement('div')\n    //     div.appendChild(text)\n    //     return div.innerHTML\n    // }\n\n    // public static decodeHtml (html: string): any {\n    // //     let element = document.createElement('div')\n    // //     element.innerHTML = html\n    // //     return element.textContent\n    // // }\n    // // function decodeHTMLEntities(text) {\n    // }\n\n    public static encodeHtml (str: string) {\n        let buf = []\n        for (let i = str.length - 1 ;i >= 0 ; i-- ) {\n            buf.unshift(['&#', str.charCodeAt(i) , ';'].join(''))\n        }\n        return buf.join('')\n    }\n\n    public static decodeHtml (str: string) {\n        let text = str.replace(/&#(\\d+);/g, function ( match, dec) {\n            return String.fromCharCode(dec).replace(/\\s/g, function ( match, dec) {\n                    return ' '\n                })\n        })\n        return text\n    }\n\n    private static getJSONByPath (path: string, value: any): string {\n        let json = ''\n\n        let propertyName: string = ''\n        let nextPath: string = ''\n        if (path.length === 0 || ! value ) {\n            return json\n        }\n\n        let positionDot = path.search(/\\./)\n\n        if ( positionDot === -1) {\n            propertyName = path.trim()\n            if (Number.isNaN(Number(value))) {\n                let valueBoolean = Tools.convertToBoolean(value)\n                if (valueBoolean === undefined) {\n                    let str = JSON.stringify(String(value))\n                    str = str.substring(1, str.length - 1)\n                    json = '{\"' + propertyName + '\":\"' + str + '\"}'\n                } else {\n                    json = '{\"' + propertyName + '\":' + value + '}'\n                }\n            } else {\n                json = '{\"' + propertyName + '\":' + value + '}'\n            }\n        } else {\n            propertyName = path.substring(0,positionDot)\n            nextPath = path.substring(positionDot + 1,path.length)\n            json = '{\"' + propertyName.trim() + '\": ' + Tools.getJSONByPath(nextPath,value) + ' }'\n        }\n        return json\n    }\n\n    private static assignJSON (obj: any, json: string): any {\n        Tools.mergeInObject( obj, JSON.parse(json))\n        return obj\n    }\n\n    private static convertToBoolean (input: string): boolean | undefined {\n        if ( input.length <= 5 ) {\n            try {\n                return JSON.parse(input)\n            } catch (e) {\n                return undefined\n            }\n        }\n        return undefined\n    }\n\n    // Convert to typescript : https://github.com/gmasmejean/recursiveAssign/blob/master/index.js\n    private static assign ( ref: any, key: any, value: any ) {\n        if ( Tools.isPlainObject(value) ) {\n            if ( !Tools.isPlainObject(ref[key]) ) {\n                ref[key] = {}\n            }\n            Tools.mergeInObject( ref[key], value )\n        } else {\n            ref[key] = value\n        }\n    }\n\n    private static mergeInObject ( dest: any, data: any ) {\n        Object.keys( data ).forEach( key => {\n            Tools.assign( dest, key, data[key] )\n        })\n    }\n\n    private static isPlainObject ( o: any ) {\n        return o !== undefined && o.constructor !== undefined && o.constructor.prototype === Object.prototype\n    }\n}\n","/**\n * todo\n * @class sgvizler.MESSAGES\n * @memberof sgvizler\n */\nexport enum MESSAGES {\n    ERROR_CHART_UNKNOWN,\n    ERROR_CHART_PATTERN_OPTION_UNKNOWN,\n    ERROR_REQUEST,\n    ERROR_CHART,\n    ERROR_DEPENDENCIES,\n    ERROR_ENDPOINT_FORGOT,\n    ERROR_DATA_EMPTY,\n    ERROR_DATA_NOROW\n}\n\n/**\n *\n * @class sgvizler.Messages\n * @memberof sgvizler\n */\nexport class Messages {\n    public static get (id: Messages,args?: Array<string>) {\n        let message = ''\n        switch (id) {\n            case MESSAGES.ERROR_CHART_UNKNOWN :\n                message = 'The chart $0 does not exist.'\n                break\n            case MESSAGES.ERROR_CHART_PATTERN_OPTION_UNKNOWN :\n                message = \"The pattern of chart options is unknown : '$0'\" +\n                    \"Use 'variable1=value1|variable1=value1' or for style 'width:100%;font:red;' or 'class1 class2'\"\n                break\n            case MESSAGES.ERROR_REQUEST :\n                message = 'Sorry, the sparql server sent an error. </br> $0'\n                break\n            case MESSAGES.ERROR_CHART :\n                message = 'Sorry, the chart sent an error. </br> $0'\n                break\n            case MESSAGES.ERROR_DEPENDENCIES :\n                message = 'The chart dependencies sent an error. </br> $0'\n                break\n            case MESSAGES.ERROR_ENDPOINT_FORGOT :\n                message = 'The endpoint of Sparql service is forgotten (data-sgvizler-endpoint).'\n                break\n            case MESSAGES.ERROR_DATA_EMPTY :\n                message = 'The resquest sent null.'\n                break\n            case MESSAGES.ERROR_DATA_NOROW :\n                message = 'The resquest sent no row.'\n                break\n        }\n\n        if (args) {\n            for (let i = 0, len = args.length; i < len; i++) { // tslint:disable-line\n                message = message.replace('$' + i, args[i])\n            }\n        }\n\n        return message\n    }\n}\n","import {\n    Tools,\n    Chart,\n    Core\n} from '../sgvizler'\n\n/**\n *\n * @memberof gvizler\n */\nexport class Select {\n    private static readonly CLASS_NAME: string = 'sgvizler-select'\n\n    private static classOfChartSelectedByDefault: string = 'bordercloud.visualization.DataTable'\n\n    /**\n     * Stores the charts\n     */\n    private static charts = [\n        {\n            // optgroup\n            label: 'bordercloud.visualization',\n            charts: [\n                'bordercloud.visualization.DataTable'\n            ]\n        },\n        {\n            // optgroup\n            label: 'd3.visualization',\n            charts: [\n                /*'d3.visualization.AreaChart',\n                'd3.visualization.BarChart',\n                'd3.visualization.BubbleChart',\n                'd3.visualization.ColumnChart',*/\n                'd3.visualization.Line',\n                'd3.visualization.Pie'\n                /*,\n                'd3.visualization.ScatterChart'\n                */\n            ]\n        },\n        {\n            // optgroup\n            label: 'leaflet.visualization',\n            charts: [\n                'leaflet.visualization.Map'\n            ]\n        },\n        {\n            // optgroup\n            label: 'google.visualization',\n            charts: [\n                'google.visualization.AnnotationChart',\n                'google.visualization.AreaChart',\n                'google.visualization.BarChart',\n                'google.visualization.BubbleChart',\n                'google.visualization.Calendar',\n                'google.visualization.CandlestickChart',\n                'google.visualization.ColumnChart',\n                'google.visualization.ComboChart',\n                'google.visualization.GeoChart',\n                'google.visualization.Histogram',\n                'google.visualization.IntervalChart',\n                'google.visualization.LineChart',\n                'google.visualization.Map',\n                // 'google.visualization.OrgChart',\n                'google.visualization.Pie',\n                'google.visualization.ScatterChart',\n                'google.visualization.SteppedAreaChart',\n                'google.visualization.Table',\n                'google.visualization.Trendline',\n                'google.visualization.Timeline',\n                'google.visualization.TreeMap'\n            ]\n        },\n        {\n            // optgroup\n            label: 'sgvizler.visualization',\n            charts:\n                [\n                    'sgvizler.visualization.Table'\n                ]\n        }\n    ]\n\n    /**\n     *\n     * @param {string} elementID\n     * @returns {Promise<void>}\n     */\n    public static async drawWithElementId (elementID: string) {\n        let element = document.getElementById(elementID)\n        if (element) {\n            await Select.draw(element)\n        }\n    }\n\n    /**\n     *\n     * @param {Element} element\n     * @param options\n     * @returns {Promise<void>}\n     */\n    public static async draw (element: Element,options?: any) {\n        let nodesOption = Select.getSelectOptions(options)\n        for (let node of nodesOption) {\n            element.appendChild(node.cloneNode(true))\n        }\n    }\n\n    /**\n     * todo\n     */\n    public static drawAll () {\n        let nodesOption = Select.getSelectOptions()\n\n        let nodesSnapshot = document.evaluate(\"//select[contains(@class, '\" + Select.CLASS_NAME + \"')]\",\n            document, null, XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE, null )\n        for ( let i = 0 ; i < nodesSnapshot.snapshotLength; i++ ) {\n            for (let node of nodesOption) {\n                nodesSnapshot.snapshotItem(i).appendChild(node.cloneNode(true))\n            }\n        }\n    }\n\n    /**\n     * Build url of chart's doc\n     * @param {string} classFullName\n     * @param {string} pathDoc\n     * @returns {string} absolute or relative URL\n     */\n    public static getChartDoc (classFullName: string,pathDoc?: string) {\n        let chartClass = Tools.getObjectByPath(classFullName) as Chart\n\n        let path: string = ''\n\n        if (pathDoc !== undefined) {\n            path = pathDoc\n        }else {\n            path = Core.DOCPATH\n        }\n\n        return path + chartClass.tutorialFilename\n    }\n\n    private static getSelectOptions (options?: any) {\n        let chartClass\n        let nodeOption\n        let nodeOptgroup\n        let attrLabel\n        let attrValue\n        let attrIcon\n        let attrSub\n        let attrSelected\n        let nodes: Array<Node> = []\n\n        // todo: write the option selected in the doc\n        let classSelected = options && options.selected ? options.selected : this.classOfChartSelectedByDefault\n        for (let optgroup of this.charts) {\n\n            nodeOptgroup = document.createElement('optgroup')\n            attrLabel = document.createAttribute('label')\n            attrLabel.value = optgroup.label\n            nodeOptgroup.setAttributeNode(attrLabel)\n\n            for (let chart of optgroup.charts) {\n                chartClass = Tools.getObjectByPath(chart) as Chart\n                nodeOption = document.createElement('option')\n                attrIcon = document.createAttribute('data-icon')\n                attrIcon.value = chartClass.icon\n                attrSub = document.createAttribute('data-subtext')\n                // todo: write the option subtext in the doc\n                if (options.subtext === 'classFullName') {\n                    attrSub.value = chartClass.classFullName\n                } else {\n                    attrSub.value = chartClass.subtext\n                }\n                attrValue = document.createAttribute('value')\n                attrValue.value = chartClass.classFullName\n\n                if (classSelected === chart) {\n                    attrSelected = document.createAttribute('selected')\n                    nodeOption.setAttributeNode(attrSelected)\n                }\n                nodeOption.text = chartClass.label\n                nodeOption.setAttributeNode(attrIcon)\n                nodeOption.setAttributeNode(attrSub)\n                nodeOption.setAttributeNode(attrValue)\n                nodeOptgroup.appendChild(nodeOption)\n            }\n            nodes.push(nodeOptgroup)\n        }\n        return nodes\n    }\n}\n","/**\n * todo\n * @class sgvizler.SparqlError\n * @memberof sgvizler\n */\nexport class SparqlError {\n\n    public static getErrorMessageWithStatus200 (xhr: XMLHttpRequest) {\n        let patternWikidata = /MalformedQueryException: *(.*)/m // tslint:disable-line\n\n        let errorWikidata = patternWikidata.exec(xhr.response)\n        if (errorWikidata !== null) {\n            return errorWikidata[1]\n        }\n\n        return xhr.response\n    }\n    public static getErrorWithOtherStatus (xhr: XMLHttpRequest,url: string) {\n        let linkError = '<a href=\"' + url + '\" target=\"_blank\">See this error</a>'\n        let message = ''\n        if (xhr.status === 0) {\n            if (xhr.statusText !== '') {\n                message = xhr.statusText + '(' + xhr.status + ')'\n            } else {\n                message = 'You need to allow running insecure content in your navigator or this SPARQL service doesn\\'t exist or timed out or CORS violation or no Access-Control-Allow-Origin header set. (see console log)'\n            }\n        } else {\n            message = xhr.statusText + '(' + xhr.status + ')'\n        }\n        return message + '<br/>\\n' + linkError\n    }\n\n}\n","import {\n    Loader,\n    Logger\n} from '../sgvizler'\n\nexport abstract class Dependency {\n    public url: string\n    public loadBefore: Dependency|null\n    public endDownload: boolean\n    public startDownload: boolean\n\n    constructor (url: string,loadBefore?: Dependency) {\n        this.url = url\n        this.loadBefore = loadBefore ? loadBefore : null\n        this.endDownload = false\n        this.startDownload = false\n    }\n\n    public load (): void {\n        if (! this.isLoaded()) {\n            this.startDownload = true\n            Logger.logSimple('Load started :' + this.url)\n            Loader.load(this)\n        }\n    }\n\n    public isLoaded () {\n        if (Loader.isLoaded(this)) {\n            this.startDownload = true\n            this.endDownload = true\n        }\n        return this.endDownload\n    }\n\n    public callBack () {\n        this.endDownload = true\n        Logger.logSimple('Load ended :' + this.url)\n    }\n}\n\nexport class ScriptDependency extends Dependency {}\n\nexport class CssDependency extends Dependency {}\n","import {\n    Logger,\n    ScriptDependency,\n    CssDependency,\n    Dependency\n} from '../sgvizler'\n\n/**\n * Todo\n *\n * @class sgvizler.visualization.Loader\n * @memberof sgvizler.visualization\n */\nexport class Loader {\n    private static _load: Array<string> = []\n    private static _loaded: Array<string> = []\n    private static _dependenciesToLoad: Array<Dependency> = []\n    private static _pathScripts: string = ''\n    private static _listCallEvent: Array<any> = []\n\n    public static on (event: string,fn: any): void {\n        if (event === 'loaded') {\n            Loader._listCallEvent.push(fn)\n        }\n    }\n\n    public static detectRoot (): void {\n        let resultXpath = document.evaluate('//script[contains(@src,\"sgvizler2.js\")]/@src',\n            document, null, XPathResult.STRING_TYPE, null )\n        let srcScript = resultXpath.stringValue\n\n        let match = /^(.*)sgvizler2\\.js$/.exec(srcScript)\n        if (match) {\n            Loader._pathScripts = match[1]\n        }\n    }\n\n    public static isLoad (dep: Dependency) {\n        return Loader._load.indexOf(dep.url) !== -1\n    }\n\n    public static isLoaded (dep: Dependency) {\n        return Loader._loaded.indexOf(dep.url) !== -1\n    }\n\n    public static load (dep: Dependency) {\n        if (dep instanceof ScriptDependency) {\n            Loader.loadScript(dep)\n        }else if (dep instanceof CssDependency) {\n            Loader.loadCss(dep)\n        }\n    }\n\n    private static fireEvent (event: string): void {\n        for (let call of Loader._listCallEvent) {\n            call(event)\n        }\n    }\n\n    private static checkDependenciesToLoad () {\n        let len = Loader._dependenciesToLoad.length\n        for (let i = 0; i < len ; i++) {\n            let dep = Loader._dependenciesToLoad[i]\n            if (dep === undefined || Loader.isLoaded(dep)) {\n                this._dependenciesToLoad.splice(i)\n            }else {\n                if (dep instanceof ScriptDependency) {\n                    Loader.loadScript(dep)\n                }else if (dep instanceof ScriptDependency) {\n                    Loader.loadCss(dep)\n                }\n            }\n        }\n    }\n\n    private static getAbsoluteURL (url: string) {\n        if (url.match(/^(\\/\\/|https?)/)) {\n            return url\n        } else {\n            return Loader._pathScripts + url\n        }\n    }\n\n    private static loadScript (dep: CssDependency): Promise<any> {\n        let url = dep.url\n        return new Promise(function (resolve, reject) {\n            if (dep.loadBefore && ! dep.loadBefore.endDownload) {\n                //Logger.logSimple('Waiting : ' + dep.loadBefore.url + ' before ' + dep.url)\n                Loader._dependenciesToLoad.push(dep)\n                Loader.load(dep.loadBefore)\n                return resolve()\n            }\n\n            // include script only once\n            if (Loader.isLoad(dep)) {\n                return resolve() // false;\n            }else {\n                Loader._load.push(url)\n            }\n\n            Logger.logSimple('Loading : ' + dep.url)\n            // Adding the script tag to the head as suggested before\n            let head = document.getElementsByTagName('head')[0]\n            let script = document.createElement('script')\n            script.type = 'text/javascript'\n            script.src = Loader.getAbsoluteURL(url)\n\n            // Then bind the event to the callback function.\n            // There are several events for cross browser compatibility.\n            script.onload = function () {\n                Loader._loaded.push(url) // in first\n                dep.callBack()\n                Loader.checkDependenciesToLoad()\n                // remember included script\n                Loader.fireEvent('loaded')\n                }\n\n            // Fire the loading\n            head.appendChild(script)\n        })\n    }\n\n    private static loadCss (dep: CssDependency): Promise<any> {\n        let url = dep.url\n        return new Promise(function (resolve, reject) {\n            if (dep.loadBefore && ! dep.loadBefore.endDownload) {\n                Loader._dependenciesToLoad.push(dep)\n                return Loader.load(dep.loadBefore)\n            }\n\n            // include script only once\n            if (Loader.isLoad(dep)) {\n                return // false;\n            }else {\n                Loader._load.push(url)\n            }\n\n            // <link rel=\"stylesheet\" type=\"text/css\" href=\"../dist/datatables.min.css\"/>\n            let head = document.getElementsByTagName('head')[0]\n            let link = document.createElement('link')\n            link.rel = 'stylesheet'\n            link.href = Loader.getAbsoluteURL(url)\n\n            // Then bind the event to the callback function.\n            // There are several events for cross browser compatibility.\n            link.onload = function () {\n                Loader._loaded.push(url)\n                Logger.logSimple('Loaded : ' + url )\n                dep.callBack()\n                Loader.checkDependenciesToLoad()\n                // remember included script\n                Loader.fireEvent('loaded')\n            }\n\n            // Fire the loading\n            head.appendChild(link)\n        })\n    }\n}\n","/**\n * @namespace sgvizler.visualization\n */\nexport * from './visualization/Table'\n","import { Chart } from '../Chart'\nimport { SparqlTools } from '../SparqlTools'\nimport { SparqlResultInterface } from '../SparqlResultInterface'\n\n/**\n * Todo Table\n * @class sgvizler.visualization.Table\n * @tutorial sgvizler_visualization_Table\n * @memberof sgvizler.visualization\n */\nexport class Table extends Chart {\n\n    public get icon (): string {\n        return 'fa-table'\n    }\n\n    public get label (): string {\n        return 'Table'\n    }\n\n    public get subtext (): string {\n        return 'simple table'\n    }\n\n    public get classFullName (): string {\n        return 'sgvizler.visualization.Table'\n    }\n\n    public get tutorialFilename (): string {\n        return 'tutorial-sgvizler_visualization_Table.html'\n    }\n\n    public constructor () {\n        super()\n      //  addDependence(SparqlResult)\n    }\n\n    /**\n     * Make a standard simple html table.\n     * Available options:\n     * - 'headings'   :  \"true\" / \"false\"  (default: \"true\")\n     * @memberOf Table\n     * @returns {Promise<void>}\n     * @param result\n     */\n    public draw (result: SparqlResultInterface): Promise<any> {\n        let currentChart = this\n        return new Promise(function (resolve, reject) {\n            // transform query\n            // console.log(noCols + \" x \" + noRows)\n            let opt = Object.assign({ headings: 'true' }, currentChart.options)\n\n            let cols = result.head.vars\n            let rows = result.results.bindings\n            let noCols = cols.length\n            let noRows = rows.length\n\n            // console.log(opt)\n            let html = '<table ' + currentChart.getHTMLStyleOrClass() + ' >'\n            if (opt.headings === 'true') {\n                html += '<tr>'\n                for (let col of cols) {\n                    html += '<th>' + col + '</th>'\n                }\n                html += '</tr>'\n            }\n\n            for (let row of rows) {\n                html += '<tr>'\n                for (let col of cols) {\n                    html += '<td>' + row[col].value + '</td>'\n                }\n                html += '</tr>'\n            }\n\n            html += '</table>'\n\n            let obj = document.getElementById(currentChart.container.id)\n            if (obj) {\n                obj.innerHTML = html\n            }\n            // finish\n            resolve()\n        })\n    }\n}\n","import {\n    SparqlResultInterface,\n    Container,\n    Logger,\n    MESSAGES,\n    Dependency,\n    CssDependency,\n    ScriptDependency,\n    Loader,\n    Tools\n} from '../sgvizler'\n\n/**\n * Define the type of patterns for the options\n *\n * @class sgvizler.CHART_PATTERN_OPTIONS\n * @memberof sgvizler\n */\nexport enum CHART_PATTERN_OPTIONS {\n    EMPTY,\n    UNKNOWN,\n    VARIABLE,\n    STYLE,\n    CLASS,\n    WIKI\n}\n\n/**\n * Abstract class for all the charts. Ensures that chart types\n * correctly inherit methods from this class.\n * @class sgvizler.Chart\n * @abstract\n * @export\n * @memberof sgvizler\n */\nexport abstract class Chart {\n    /**\n     * Give the options of chart\n     * @property options\n     * @memberof sgvizler.Chart\n     * @public\n     * @type {{}}\n     */\n    public options: any = {}\n\n    protected _resultSparql: SparqlResultInterface\n    private _tabDependences: Array<Dependency> = []\n    private _isDone: boolean\n    private _patternOptions: CHART_PATTERN_OPTIONS = CHART_PATTERN_OPTIONS.EMPTY\n    private _container: Container\n    private _width: string = ''\n    private _height: string = ''\n    private _optionsRaw: string = ''\n    private _class: string = ''\n    private _style: string = ''\n\n    /**\n     * Constructor of all chart types created by\n     * sgvizler.charts inherit from.\n     * @memberof sgvizler.Chart\n     * @constructor sgvizler.Chart\n     */\n    constructor () {\n        this._width = '100%'\n        this._isDone = false\n\n        let currentThis = this\n        Loader.on('loaded',() => {\n            if (currentThis.container != null &&\n                ! currentThis._isDone &&\n                currentThis.isLoadedAllDependencies() &&\n                currentThis._resultSparql !== null &&\n                currentThis._resultSparql !== undefined) {\n                currentThis.doDraw()\n            }\n        })\n    }\n\n    public async loadDependenciesAndDraw (result: SparqlResultInterface) {\n        Logger.log(this.container,'Chart loaded dependencies : ' + this.container.id)\n        // let promisesArray: Array<any> = []\n        this._resultSparql = result\n\n        if (this.isLoadedAllDependencies()) {\n            await this.doDraw()\n        } else {\n            await this.loadDependencies()\n        }\n    }\n\n    public async loadDependencies (): Promise<any> {\n        let promisesArray: Array<any> = []\n        for (let dep of this._tabDependences) {\n            promisesArray.push(dep.load())\n        }\n        return Promise.all(promisesArray)\n    }\n    /**\n     * Todo\n     * @member draw\n     * @memberof sgvizler.Chart\n     * @public\n     * @param {SparqlResultInterface} result\n     * @returns {Promise<void>}\n     */\n    public abstract draw (result: SparqlResultInterface): Promise<any>\n\n    /**\n     * Icon of chart.\n     * http://fontawesome.io/icons/\n     * https://silviomoreto.github.io/bootstrap-select/examples/\n     * @memberof sgvizler.Chart\n     * @abstract\n     * @public\n     * @returns {string}\n     */\n    public abstract get icon (): string\n\n    /**\n     * Todo\n     * @memberof sgvizler.Chart\n     * @abstract\n     * @public\n     * @returns {string}\n     */\n    public abstract get label (): string\n\n    /**\n     * Todo\n     * @memberof sgvizler.Chart\n     * @abstract\n     * @public\n     * @returns {string}\n     */\n    public abstract get subtext (): string\n\n    /**\n     * Todo\n     * @memberof sgvizler.Chart\n     * @abstract\n     * @public\n     * @returns {string}\n     */\n    public abstract get classFullName (): string\n\n    /**\n     * Todo\n     * @memberof sgvizler.Chart\n     * @abstract\n     * @public\n     * @returns {string}\n     */\n    public abstract get tutorialFilename (): string\n\n    /**\n     * Todo\n     * @memberof sgvizler.Chart\n     * @returns {CHART_PATTERN_OPTIONS}\n     */\n    public get patternOptions (): CHART_PATTERN_OPTIONS {\n        return this._patternOptions\n    }\n\n    /**\n     * Todo\n     * @memberof sgvizler.Chart\n     * @returns {string}\n     */\n    public get classHtml (): string {\n        return this._class\n    }\n\n    /**\n     * Todo\n     * @memberof sgvizler.Chart\n     * @param {string} value\n     */\n    public set classHtml (value: string) {\n        this._class = value\n    }\n\n    /**\n     * Todo\n     * @memberof sgvizler.Chart\n     * @returns {string}\n     */\n    public get style (): string {\n        return this._style\n    }\n\n    /**\n     * Todo\n     * @memberof sgvizler.Chart\n     * @param {string} value\n     */\n    public set style (value: string) {\n        this._style = value\n    }\n\n    /**\n     *\n     * @memberof sgvizler.Chart\n     * @returns {Container}\n     */\n    public get container (): Container {\n        return this._container\n    }\n\n    /**\n     * Todo\n     * @memberof sgvizler.Chart\n     * @param {Container} value\n     */\n    public set container (value: Container) {\n        this._container = value\n    }\n\n    /**\n     * Todo\n     * @memberof sgvizler.Chart\n     * @returns {string}\n     */\n    public get optionsRaw (): string {\n        return this._optionsRaw\n    }\n\n    /**\n     * Todo\n     * @memberof sgvizler.Chart\n     * @param {string} value\n     */\n    public set optionsRaw (value: string) {\n        this._optionsRaw = value\n        this.doParseOptionsRaw()\n    }\n\n    /**\n     * Todo\n     * @memberof sgvizler.Chart\n     * @returns {string}\n     */\n    public get height (): string {\n        return this._height\n    }\n\n    /**\n     * Todo\n     * @memberof sgvizler.Chart\n     * @param {string} value\n     */\n    public set height (value: string) {\n        this._height = value\n    }\n\n    /**\n     * Todo\n     * @memberof sgvizler.Chart\n     * @returns {string}\n     */\n    public get width (): string {\n        return this._width\n    }\n\n    /**\n     * Todo\n     * @memberof sgvizler.Chart\n     * @param {string} value\n     */\n    public set width (value: string) {\n        this._width = value\n    }\n\n    /**\n     * Todo\n     * @memberof sgvizler.Chart\n     * @returns {string}\n     */\n    protected getHTMLStyleOrClass () {\n        let html = ''\n        let opts = this.options\n        if (this._patternOptions === CHART_PATTERN_OPTIONS.CLASS) {\n            html = Object.keys(opts).map((property) => '${opts[property]}').join(' ')\n            html = 'class=\"' + html + '\"'\n        }\n        if (this._patternOptions === CHART_PATTERN_OPTIONS.STYLE) {\n            html = Object.keys(opts).map((property) => '${property}:${opts[property]}').join(';')\n            html = 'style=\"' + html + '\"'\n        }\n        return html\n    }\n\n    protected addScript (url: string,loadBefore?: Dependency) {\n        let dep = new ScriptDependency(url,loadBefore)\n        this._tabDependences.push(dep)\n        return dep\n    }\n\n    protected addCss (url: string,loadBefore?: Dependency) {\n        let dep = new CssDependency(url,loadBefore)\n        this._tabDependences.push(dep)\n        return dep\n    }\n\n    private isLoadedAllDependencies (): boolean {\n        for (let dep of this._tabDependences) {\n            if (! Loader.isLoaded(dep)) {\n                return false\n            }\n        }\n        return true\n    }\n\n    private doDraw () {\n        Logger.log(this.container,'Chart started : ' + this._container.id)\n        let currentThis = this\n        let isEmpty = false\n\n        if ( currentThis._resultSparql === null\n        || currentThis._resultSparql === undefined\n        ) {\n            isEmpty = true\n        } else {\n            let cols = currentThis._resultSparql.head.vars\n            let rows = currentThis._resultSparql.results.bindings\n            let noCols = cols.length\n            let noRows = rows.length\n\n            if (noCols === 0 ) {\n                isEmpty = true\n            }\n        }\n\n        if (isEmpty) {\n            Logger.displayFeedback(currentThis._container, MESSAGES.ERROR_DATA_EMPTY)\n            Logger.log(currentThis.container,'Chart finished with error : ' + currentThis._container.id)\n        } else {\n            currentThis.draw(currentThis._resultSparql).then(\n                function (valeur) {\n                    currentThis._isDone = true\n                    Logger.log(currentThis.container,'Chart finished : ' + currentThis._container.id)\n                }\n                , function (error) {\n                    console.log(error)\n                    Logger.displayFeedback(currentThis._container, MESSAGES.ERROR_CHART, [error])\n                    Logger.log(currentThis.container,'Chart finished with error : ' + currentThis._container.id)\n                }\n            )\n        }\n    }\n\n    // noinspection JSValidateJSDoc\n    // noinspection tslint\n    /**\n     * todo\n     * @memberof sgvizler.Chart\n     * @param {RegExp} patternOption\n     * @param {CHART_PATTERN_OPTIONS} typePattern\n     */\n    private execPattern (patternOption: RegExp,typePattern: CHART_PATTERN_OPTIONS) {\n        let matchArray\n        let raw = this._optionsRaw\n        while ((matchArray = patternOption.exec(raw)) !== null) { // tslint:disable-line\n            // this.options[matchArray[1].toLowerCase()] = matchArray[2].trim()\n            // this.options[matchArray[1]] = matchArray[2].trim()\n            Tools.assignProperty(this.options,matchArray[1],matchArray[2].trim())\n            this._patternOptions = typePattern\n        }\n    }\n\n    /**\n     * todo\n     * @memberof sgvizler.Chart\n     */\n    private doParseOptionsRaw () {\n        // 3 possibilities\n        // pattern option : separate by optionA=a|optionB=b\n        // pattern style : any options, only style separate by ;\n        // pattern class : words separate by space\n\n        // noinspection TsLint\n        let patternOption = /\\|? *([^=]*) *= *([^=|]*)/iy // tslint:disable-line\n        let patternStyle = /([^:]+):([^:;]+) *;?/iy // tslint:disable-line\n        let patternClass = /([^ |;]+) ?/iy // tslint:disable-line\n        let patternWiki =  /\\!? *([^=]*) *= *([^=!]*)/iy // tslint:disable-line\n\n        let raw = this._optionsRaw\n        if (raw === '') {\n            this._patternOptions = CHART_PATTERN_OPTIONS.EMPTY\n        } else {\n            this._patternOptions = CHART_PATTERN_OPTIONS.UNKNOWN\n        }\n\n        if (this._optionsRaw.indexOf('|') === -1 && this.patternOptions === CHART_PATTERN_OPTIONS.UNKNOWN) {\n            this.execPattern(patternWiki,CHART_PATTERN_OPTIONS.WIKI)\n        }\n\n        if ( this.patternOptions === CHART_PATTERN_OPTIONS.UNKNOWN) {\n            this.execPattern(patternOption,CHART_PATTERN_OPTIONS.VARIABLE)\n        }\n\n        if ( this.patternOptions === CHART_PATTERN_OPTIONS.UNKNOWN) {\n            this.execPattern(patternStyle,CHART_PATTERN_OPTIONS.STYLE)\n        }\n\n        if ( this.patternOptions === CHART_PATTERN_OPTIONS.UNKNOWN) {\n            let matchArray\n            let raw = this._optionsRaw\n            let i = 0\n            while ((matchArray = patternClass.exec(raw)) !== null) { // tslint:disable-line\n                this.options['class' + i] = matchArray[2]\n                this._patternOptions = CHART_PATTERN_OPTIONS.UNKNOWN\n                i++\n            }\n        }\n\n        if ( this.patternOptions === CHART_PATTERN_OPTIONS.UNKNOWN ) {\n            Logger.displayFeedback(this.container, MESSAGES.ERROR_CHART_PATTERN_OPTION_UNKNOWN,[this._optionsRaw])\n        } else if (\n            this.patternOptions === CHART_PATTERN_OPTIONS.WIKI ||\n            this.patternOptions === CHART_PATTERN_OPTIONS.VARIABLE ||\n            this.patternOptions === CHART_PATTERN_OPTIONS.STYLE\n        ) {\n            if (this.options['width'] !== undefined ) {\n                this.width = this.options['width']\n            }\n            if (this.options['height'] !== undefined ) {\n                this.height = this.options['height'] as string\n            }\n        }\n    }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n"],"names":["S.Loader","S.Container","S.Select","jqueryProxy.prototype","S.Core","google","d3","visualization","visualizationNS","API","Map","ScatterChart","Pie","ColumnChart","BubbleChart","BarChart","AreaChart","Tools","Table","S.Messages"],"mappings":"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"}